@{ 
    var profileData = this.Session["DefaultGAINSess"] as GAIN.Models.LoginSession;
    var user_type = profileData.UserType;
}

    <style type="text/css">
        .btn {
            font-size: 13px;
        }
    </style>

    <div class="row-fluid">
        <div class="widget-box">
            <div class="widget-content">
                <div class="row-fluid">
                    <div class="span2"><br/>
                        <font style="font-size:10pt;"><b>Initiative ID:</b></font>
                        @Html.DevExpress().Label(settings =>
                        {
                            settings.Name = "LblInitiative";
                            settings.Text = "XXX-0001";
                            settings.ControlStyle.Font.Bold = true;
                            settings.ControlStyle.Font.Size = 12;
                        }).GetHtml()
                    </div>
                    <div class="span1"><br />
                        <font style="font-size:10pt;"><b>Related Initiative:</b></font>
                    </div>
                    <div class="span4"><br />
                        @Html.DevExpress().TextBox(settings =>
                        {
                            settings.Name = "LblRelatedInitiative";
                            //settings.Text = "REL-0001";
                            settings.ControlStyle.Font.Bold = true;
                            settings.ControlStyle.Font.Size = 10;
                        }).GetHtml()
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="span2a">
                        Sub-Country<font color="red">*</font>:
                        @{
                            var GrdSubCountryPopup = Html.DevExpress().ComboBox(
                            settings =>
                            {
                                settings.Name = "GrdSubCountryPopup";
                                settings.Properties.DropDownWidth = System.Web.UI.WebControls.Unit.Pixel(125);
                                settings.Properties.ClientInstanceName = "GrdSubCountryPopup";
                                //settings.ClientEnabled = false;
                                settings.Width = 190;
                                settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnSubCountryPopupChanged";
                            }).GetHtml();
                        }
                        @*@Html.Action("GrdSubCountryPartial")*@
                    </div>
                    <div class="span2a">
                        Brand<font color="red">*</font>:
                        @{
                            var GrdBrandPopup = Html.DevExpress().ComboBox(
                            settings =>
                            {
                                settings.Name = "GrdBrandPopup";
                                settings.Properties.DropDownWidth = System.Web.UI.WebControls.Unit.Pixel(125);
                                settings.Properties.ClientInstanceName = "GrdBrandPopup";
                                //settings.ClientEnabled = false;
                                settings.Width = 190;
                                settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnBrandPopupChanged";
                            }).GetHtml();
                        }
                        @*@Html.Action("GrdBrandPartial")*@
                    </div>
                    <div class="span2a">
                        Legal Name<font color="red">*</font>:
                        @{
                            var GrdLegalEntityPopup = Html.DevExpress().ComboBox(
                            settings =>
                            {
                                settings.Name = "GrdLegalEntityPopup";
                                settings.Properties.DropDownWidth = System.Web.UI.WebControls.Unit.Pixel(125);
                                settings.Properties.ClientInstanceName = "GrdLegalEntityPopup";
                                //settings.ClientEnabled = false;
                                settings.Width = 190;
                            }).GetHtml();
                        }
                        @*@Html.Action("GrdLegalEntityPartial")*@
                    </div>
                    <div class="span2a">
                        Country<font color="red">*</font>:
                        <input class="inputan-popup" type="text" id="GrdCountry" disabled="disabled" style="font-size: 8pt;" /><input type="hidden" id="GrdCountryVal" /> @*@Html.Action("GrdCountryPartial")*@
                    </div>
                    <div class="span2a">
                        Region<font color="red">*</font>: <input class="inputan-popup" type="text" id="GrdRegional" disabled="disabled" style="font-size: 8pt;" /><input type="hidden" id="GrdRegionalVal" /> @*@Html.Action("GrdRegionalPartial")*@
                    </div>
                    <div class="span2a">
                        Sub-Region<font color="red">*</font>: <input class="inputan-popup" type="text" id="GrdSubRegion" disabled="disabled" style="font-size: 8pt;" /><input type="hidden" id="GrdSubRegionVal" /> @*@Html.Action("GrdSubRegionPartial")*@
                    </div>
                    <div class="span2a">
                        Cluster<font color="red">*</font>: <input class="inputan-popup" type="text" id="GrdCluster" disabled="disabled" style="font-size: 8pt;" /><input type="hidden" id="GrdClusterVal" /> @*@Html.Action("GrdClusterPartial")*@
                    </div>
                    <div class="span2a">
                        Regional Office<font color="red">*</font>: <input class="inputan-popup" type="text" id="GrdRegionalOffice" disabled="disabled" style="font-size: 8pt;" /><input type="hidden" id="GrdRegionalOfficeVal" /> @*@Html.Action("GrdRegionalOfficePartial")*@
                    </div>
                    <div class="span2a">
                        Cost-Control Site<font color="red">*</font>: <input class="inputan-popup" type="text" id="GrdCostControl" disabled="disabled" style="font-size: 8pt;" /><input type="hidden" id="GrdCostControlVal" /> @*@Html.Action("GrdCostControlPartial")*@
                    </div>
                </div>
                @*<div class="row-fluid">
                        <div class="span12">&nbsp;</div>
                    </div>*@
            </div>
        </div>
    </div>

    <div class="row-fluid">
        <div class="widget-box">
            <div class="widget-content">
                <div class="row-fluid">
                    <div class="span2a">
                        Confidential<font color="red">*</font>:
                        @Html.DevExpress().ComboBox(settings =>
                       {
                           settings.Name = "CboConfidential";
                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                           settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                           settings.Width = 190;
                           settings.Properties.ValidationSettings.Display = Display.Dynamic;
                           settings.Properties.Items.Add("Y");
                           settings.Properties.Items.Add("N");
                           //settings.ClientEnabled = false;
                           //settings.Properties.ValueField = "";
                           //settings.Properties.TextField = "";
                       }).GetHtml()
                    </div>
                    <div class="span2a">
                        Responsible Name:
                        <input class="inputan-popup" type="text" id="TxResponsibleName" name="TxResponsibleName" style="font-size: 8pt;" />
                        @*<input class="inputan-popup" type="text" disabled="disabled" id="TxResponsibleName" name="TxResponsibleName" style="font-size: 8pt;" />*@
                        @*@Html.DevExpress().TextBox(settings =>
                            {
                                settings.Name = "TxResponsibleName";
                                settings.Width = 170;
                            }).GetHtml()*@
                    </div>
                    <div class="span2b">
                        Initiative Description:
                        <textarea class="inputan-popup" id="TxDesc" style="font-size: 8pt;height:70px;width:365px;overflow-y: scroll;resize:none;padding:4px;" maxlength="5000"></textarea>
                        @*<textarea class="inputan-popup" disabled="disabled" id="TxDesc" style="font-size: 8pt;height:70px;width:365px;overflow-y: scroll;resize:none;padding:4px;" maxlength="5000"></textarea>*@
                        @*<input class="inputan-popup" disabled="disabled" type="text" id="TxDesc" style="font-size: 8pt;width:375px;" />*@
                        @*@Html.DevExpress().TextBox(settings =>
                            {
                                settings.Name = "TxDesc";
                                settings.Width = 170;
                            }).GetHtml()*@
                    </div>
                    <div class="span2a">
                        Initiative Status<font color="red">*</font>:
                        @{
                            var GrdInitStatus = Html.DevExpress().ComboBox(
                            settings =>
                            {
                                settings.Name = "GrdInitStatus";
                                settings.Properties.DropDownWidth = System.Web.UI.WebControls.Unit.Pixel(190);
                                settings.Properties.ClientInstanceName = "GrdInitStatus";
                                //settings.ClientEnabled = false;
                                settings.Width = 190;
                                settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnInitStatusChanged";
                            }).GetHtml();
                        }
                        @*@Html.Action("GrdInitStatusPartial")*@
                    </div>
                    <div class="span2a">
                        LARA Code:
                        <input class="inputan-popup" type="text" id="TxLaraCode" style="font-size: 8pt;" />
                        @*<input class="inputan-popup" disabled="disabled" type="text" id="TxLaraCode" style="font-size: 8pt;" />*@
                        @*@Html.DevExpress().TextBox(settings =>
                            {
                                settings.Name = "TxLaraCode";
                                settings.Width = 170;
                            }).GetHtml()*@
                    </div>
                    <div class="span2a">
                        Port Name:
                        @{
                            var TxPortName = Html.DevExpress().ComboBox(
                            settings =>
                            {
                                settings.Name = "TxPortName";
                                settings.Properties.DropDownWidth = System.Web.UI.WebControls.Unit.Pixel(190);
                                settings.Properties.ClientInstanceName = "TxPortName";
                                //settings.ClientEnabled = false;
                                settings.Width = 190;
                                //settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnGrdInitTypeChanged";
                            }).GetHtml();
                        }
                        @*<input class="inputan-popup" disabled="disabled" type="text" id="TxPortName" style="font-size: 8pt;" />*@
                        @*@Html.DevExpress().TextBox(settings =>
                        {
                            settings.Name = "TxPortName";
                            settings.Width = 170;
                        }).GetHtml()*@
                    </div>
                    <div class="span2a">
                        Vendor Supplier:
                        <input class="inputan-popup" type="text" id="TxVendorSupp" style="font-size: 8pt;" />
                        @*<input class="inputan-popup" disabled="disabled" type="text" id="TxVendorSupp" style="font-size: 8pt;" />*@
                        @*@Html.DevExpress().TextBox(settings =>
                            {
                                settings.Name = "TxVendorSupp";
                                settings.Width = 170;
                            }).GetHtml()*@
                    </div>
                    <div class="span2a">
                        Additional Information:
                        <input class="inputan-popup" type="text" id="TxAdditionalInfo" style="font-size: 8pt;" />
                        @*<input class="inputan-popup" disabled="disabled" type="text" id="TxAdditionalInfo" style="font-size: 8pt;" />*@
                        @*@Html.DevExpress().TextBox(settings =>
                            {
                                settings.Name = "TxAdditionalInfo";
                                settings.Width = 170;
                            }).GetHtml()*@
                    </div>
                </div>
                @*<div class="row-fluid">
                        <div class="span12">&nbsp;</div>
                    </div>*@
            </div>
        </div>
    </div>

    <div class="row-fluid">
        <div class="widget-box">
            <div class="widget-content">
                <div class="row-fluid">
                    <div class="span2a">
                        Initiative Type<font color="red">*</font>: 
                        @{
                            var GrdInitType = Html.DevExpress().ComboBox(
                            settings =>
                            {
                                settings.Name = "GrdInitType";
                                settings.Properties.DropDownWidth = System.Web.UI.WebControls.Unit.Pixel(190);
                                settings.Properties.ClientInstanceName = "GrdInitType";
                                //settings.ClientEnabled = false;
                                settings.Width = 190;
                                settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnGrdInitTypeChanged";
                            }).GetHtml();
                        }
                        @*@Html.Action("GrdInitTypePartial")*@
                    </div>
                    <div class="span2b">
                        Item Category <font color="red">*</font>:
                        @{
                            var GrdInitCategory = Html.DevExpress().ComboBox(
                            settings =>
                            {
                                settings.Name = "GrdInitCategory";
                                settings.Properties.DropDownWidth = System.Web.UI.WebControls.Unit.Pixel(380);
                                settings.Properties.ClientInstanceName = "GrdInitCategory";
                                //settings.ClientEnabled = false;
                                settings.Width = 380;
                                settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnGrdInitCategoryPopupChanged";
                            }).GetHtml();
                        }
                        @*<input class="inputan-popup" type="text" id="GrdInitCategory" disabled="disabled" style="font-size: 8pt;width: 375px;" />*@
                        @*@Html.Action("GrdInitCategoryPartial")*@
                    </div>
                    <div class="span2b">
                        Sub Cost <font color="red">*</font>:
                        @{
                            var GrdSubCost = Html.DevExpress().ComboBox(
                            settings =>
                            {
                                settings.Name = "GrdSubCost";
                                settings.Properties.DropDownWidth = System.Web.UI.WebControls.Unit.Pixel(125);
                                settings.Properties.ClientInstanceName = "GrdSubCost";
                                //settings.ClientEnabled = false;
                                settings.Width = 380;
                                settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnSubCostPopupChanged";
                            }).GetHtml();
                        }
                        @*<font color="red">*</font>: <input class="inputan-popup" type="text" id="GrdSubCost" disabled="disabled" style="font-size: 8pt;width: 375px;" />*@
                        @*@Html.Action("GrdSubCostPartial")*@
                    </div>
                    <div class="span2a">
                        Action Type <font color="red">*</font>:
                        @{
                            var GrdActionType = Html.DevExpress().ComboBox(
                            settings =>
                            {
                                settings.Name = "GrdActionType";
                                settings.Properties.DropDownWidth = System.Web.UI.WebControls.Unit.Pixel(190);
                                settings.Properties.ClientInstanceName = "GrdActionType";
                                //settings.ClientEnabled = false;
                                settings.Width = 190;
                                //settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnSubCountryPopupChanged";
                            }).GetHtml();
                        }
                        @*<input class="inputan-popup" type="text" id="GrdActionType" disabled="disabled" style="font-size: 8pt;" />*@
                        @*@Html.Action("GrdActionTypePartial")*@
                    </div>
                    <div class="span2a">
                        Synergy Impact<font color="red">*</font>:
                        @{
                            var GrdSynImpact = Html.DevExpress().ComboBox(
                            settings =>
                            {
                                settings.Name = "GrdSynImpact";
                                settings.Properties.DropDownWidth = System.Web.UI.WebControls.Unit.Pixel(190);
                                settings.Properties.ClientInstanceName = "GrdSynImpact";
                                //settings.ClientEnabled = false;
                                settings.Width = 190;
                                //settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnSubCountryPopupChanged";
                            }).GetHtml();
                        }
                        @*@Html.Action("GrdSynImpactPartial")*@
                    </div>
                    <div class="span2a">
                        Start Month<font color="red">*</font>:
                        @Html.DevExpress().DateEdit(settings =>
                       {
                           settings.Name = "StartMonth";
                           settings.Properties.NullText = "MM-yyyy";
                           settings.Properties.EditFormat = EditFormat.Custom;
                           settings.Properties.EditFormatString = "MM-yyyy";
                           settings.Properties.CalendarProperties.FastNavProperties.DisplayMode = FastNavigationDisplayMode.Inline;
                           settings.Properties.PickerType = DatePickerType.Months;
                           settings.Properties.ClientSideEvents.DateChanged = "OnStartMonthChanged";
                           settings.Width = 190;
                           //settings.ClientEnabled = false;
                       }).GetHtml()
                    </div>
                    <div class="span2a">
                        End Month<font color="red">*</font>:
                        @Html.DevExpress().DateEdit(settings =>
                   {
                       settings.Name = "EndMonth";
                       settings.Properties.NullText = "MM-yyyy";
                       settings.Properties.EditFormat = EditFormat.Custom;
                       settings.Properties.EditFormatString = "MM-yyyy";
                       settings.Properties.CalendarProperties.FastNavProperties.DisplayMode = FastNavigationDisplayMode.Inline;
                       settings.Properties.PickerType = DatePickerType.Months;
                       settings.Width = 190;
                       //settings.ClientEnabled = false;
                   }).GetHtml()
                    </div>
                </div>
                @*<div class="row-fluid">
                        <div class="span12">&nbsp;</div>
                    </div>*@
            </div>
        </div>
    </div>

    <div class="row-fluid">
        <div class="widget-box">
            <div class="widget-content">
                <div class="row-fluid">
                    <div class="span2b">
                        Agency Comment:
                        <textarea class="inputan-popup" id="TxAgency" @(user_type != 3 ? "disabled=disabled" : "") style="font-size: 8pt;overflow-y: scroll;resize:none;width: 375px;"></textarea>
                        @*<textarea class="inputan-popup" disabled="disabled" id="TxAgency" style="font-size: 8pt;overflow-y: scroll;resize:none;width: 375px;"></textarea>*@
                        @*<input class="inputan-popup" disabled="disabled" type="text" id="TxAgency" style="font-size: 8pt;width: 375px;" />*@
                    </div>
                    <div class="span2b">
                        RPOC Comment:
                        <textarea class="inputan-popup" id="TxRPOCComment" @(user_type != 3 ? "disabled=disabled" : "") style="font-size: 8pt;overflow-y: scroll;resize:none;width: 375px;"></textarea>
                        @*<textarea class="inputan-popup" disabled="disabled" id="TxRPOCComment" style="font-size: 8pt;overflow-y: scroll;resize:none;width: 375px;"></textarea>*@
                        @*<input class="inputan-popup" disabled="disabled" type="text" id="TxRPOCComment" style="font-size: 8pt;width: 375px;" />*@
                    </div>
                    <div class="span2b">
                        HO Comment:
                        <textarea class="inputan-popup" id="TxHOComment" @(user_type != 1 ? "disabled=disabled" : "") style="font-size: 8pt;overflow-y: scroll;resize:none;width: 375px;"></textarea>
                        @*<textarea class="inputan-popup" disabled="disabled" id="TxHOComment" style="font-size: 8pt;overflow-y: scroll;resize:none;width: 375px;"></textarea>*@
                        @*<input class="inputan-popup" disabled="disabled" type="text" id="TxHOComment" style="font-size: 8pt;width: 375px;" />*@
                    </div>
                    <div class="span2a">
                        HO Validity:
                        @Html.DevExpress().ComboBox(settings =>
                       {
                           settings.Name = "CboHoValidity";
                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                           settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                           settings.Width = 190;
                           settings.Properties.ValidationSettings.Display = Display.Dynamic;
                           //settings.Properties.Items.Add("Y");
                           //settings.Properties.Items.Add("N");
                           //settings.ClientEnabled = false;
                       }).GetHtml()<br />
                        Category:
                        @Html.DevExpress().ComboBox(settings =>
                       {
                           settings.Name = "CboWebinarCat";
                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                           settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                           settings.Width = 190;
                           settings.Properties.ValidationSettings.Display = Display.Dynamic;
                           //settings.Properties.Items.Add("Y");
                           //settings.Properties.Items.Add("N");
                           //settings.ClientEnabled = false;
                       }).GetHtml()
                    </div>
                    <div class="span2b">
                        RPOC Validity:
                        @Html.DevExpress().ComboBox(settings =>
                       {
                           settings.Name = "CboRPOCValidity";
                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                           settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                           settings.Width = 390;
                           settings.Properties.ValidationSettings.Display = Display.Dynamic;
                           //settings.Properties.Items.Add("KO","KO");
                           //settings.Properties.Items.Add("Under Review","UR");
                           //settings.Properties.Items.Add("OK Level 1 - L1 if FY Target > 200 kUSD (L1= Cost controller)", "L1");
                           //settings.Properties.Items.Add("OK Level 2 - L2 if FY Target > 300 kUSD (L2 =Management RO)", "L2");
                           //settings.Properties.Items.Add("OK Level 3 - L3 if FY Target > 500 kUSD (L3 = Coordinateur HO)", "L3");
                           //settings.ClientEnabled = false;
                       }).GetHtml()
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row-fluid">
        <div class="widget-box">
            <div class="widget-content">
                <div class="row-fluid">
                    <div class="span2a">
                        <center>
                            @*<input disabled="disabled" id="chkAuto" type="checkbox" checked="checked" onchange="CheckUncheckCalculate();" />*@
                            <input id="chkAuto" type="checkbox" onchange="CheckUncheckCalculate();" />
                            Auto Calculate?
                        </center>
                    </div>
                    <div class="span2a">
                        Target 12 Months (USD)<font color="red">*</font>
                        @Html.DevExpress().TextBox(settings =>
                       {
                           settings.Name = "txTarget12";
                           //settings.ClientEnabled = false;
                           settings.Width = 190;
                           settings.Properties.MaskSettings.Mask = "<-999999999999..999999999999>.99";
                           settings.Properties.DisplayFormatString = "#,###.00";
                           settings.Properties.DisplayFormatInEditMode = true;
                       }).GetHtml()
                    </div>
                    <div class="span2a">
                        Target @DateTime.Now.Year (USD)<font color="red">*</font>
                        @Html.DevExpress().TextBox(settings =>
                       {
                           settings.Name = "txTargetFullYear";
                           //settings.ClientEnabled = false;
                           settings.Width = 190;
                           settings.Properties.MaskSettings.Mask = "<-999999999999..999999999999>.99";
                           settings.Properties.DisplayFormatString = "#,###.00";
                           settings.Properties.DisplayFormatInEditMode = true;
                       }).GetHtml()
                    </div>
                    <div class="span2a">
                        YTD Target @DateTime.Now.Year (USD)
                        @Html.DevExpress().TextBox(settings =>
                        {
                            settings.Name = "txYTDTargetFullYear";
                            settings.ClientEnabled = false;
                            settings.Width = 190;
                        }).GetHtml()
                    </div>
                    <div class="span2a">
                        YTD Saving @DateTime.Now.Year (USD)
                        @Html.DevExpress().TextBox(settings =>
                        {
                            settings.Name = "txYTDSavingFullYear";
                            settings.ClientEnabled = false;
                            settings.Width = 190;
                        }).GetHtml()
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row-fluid">
        <div class="widget-box">
            <div class="widget-content">
                <div class="row-fluid">
                    <div class="span12">
                        <table width="100%">
                            <tr style="height:20px;">
                                <td width="150">DETAILS</td>
                                <td width="150">Jan-@DateTime.Now.Year</td>
                                <td width="150">Feb-@DateTime.Now.Year</td>
                                <td width="150">Mar-@DateTime.Now.Year</td>
                                <td width="150">Apr-@DateTime.Now.Year</td>
                                <td width="150">May-@DateTime.Now.Year</td>
                                <td width="150">Jun-@DateTime.Now.Year</td>
                                <td width="150">Jul-@DateTime.Now.Year</td>
                                <td width="150">Aug-@DateTime.Now.Year</td>
                                <td width="150">Sep-@DateTime.Now.Year</td>
                                <td width="150">Oct-@DateTime.Now.Year</td>
                                <td width="150">Nov-@DateTime.Now.Year</td>
                                <td width="150">Dec-@DateTime.Now.Year</td>
                            </tr>
                            <tr style="height:20px;">&nbsp;</tr>
                            <tr style="height:20px;">
                                <td>Monthly Target</td>
                                <td><input class="txTarget targetjan" name="targetjan" style="width:125px;" type="text" onblur="getYtdValue();" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetfeb" name="targetfeb" style="width:125px;" type="text" onblur="getYtdValue();" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetmar" name="targetmar" style="width:125px;" type="text" onblur="getYtdValue();" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetapr" name="targetapr" style="width:125px;" type="text" onblur="getYtdValue();" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetmay" name="targetmay" style="width:125px;" type="text" onblur="getYtdValue();" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetjun" name="targetjun" style="width:125px;" type="text" onblur="getYtdValue();" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetjul" name="targetjul" style="width:125px;" type="text" onblur="getYtdValue();" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetaug" name="targetaug" style="width:125px;" type="text" onblur="getYtdValue();" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetsep" name="targetsep" style="width:125px;" type="text" onblur="getYtdValue();" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetoct" name="targetoct" style="width:125px;" type="text" onblur="getYtdValue();" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetnov" name="targetnov" style="width:125px;" type="text" onblur="getYtdValue();" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetdec" name="targetdec" style="width:125px;" type="text" onblur="getYtdValue();" onkeypress="return isNumberKey(event)"/></td>
                            </tr>
                            <tr style="height:20px;">&nbsp;</tr>
                            <tr style="height:20px;">
                                <td>Monthly Saving</td>
                                <td><input class="txSaving savingjan" name="savingjan" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingfeb" name="savingfeb" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingmar" name="savingmar" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingapr" name="savingapr" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingmay" name="savingmay" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingjun" name="savingjun" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingjul" name="savingjul" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingaug" name="savingaug" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingsep" name="savingsep" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingoct" name="savingoct" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingnov" name="savingnov" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingdec" name="savingdec" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row-fluid">
        <div class="widget-box">
            <div class="widget-content">
                <div class="row-fluid">
                    <div class="span12">
                        <table width="100%">
                            <tr style="height:20px;">
                                <td width="150">DETAILS</td>
                                <td width="150">Jan-@DateTime.Now.AddYears(1).ToString("yyyy")</td>
                                <td width="150">Feb-@DateTime.Now.AddYears(1).ToString("yyyy")</td>
                                <td width="150">Mar-@DateTime.Now.AddYears(1).ToString("yyyy")</td>
                                <td width="150">Apr-@DateTime.Now.AddYears(1).ToString("yyyy")</td>
                                <td width="150">May-@DateTime.Now.AddYears(1).ToString("yyyy")</td>
                                <td width="150">Jun-@DateTime.Now.AddYears(1).ToString("yyyy")</td>
                                <td width="150">Jul-@DateTime.Now.AddYears(1).ToString("yyyy")</td>
                                <td width="150">Aug-@DateTime.Now.AddYears(1).ToString("yyyy")</td>
                                <td width="150">Sep-@DateTime.Now.AddYears(1).ToString("yyyy")</td>
                                <td width="150">Oct-@DateTime.Now.AddYears(1).ToString("yyyy")</td>
                                <td width="150">Nov-@DateTime.Now.AddYears(1).ToString("yyyy")</td>
                                <td width="150">Dec-@DateTime.Now.AddYears(1).ToString("yyyy")</td>
                            </tr>
                            <tr style="height:20px;">&nbsp;</tr>
                            <tr style="height:20px;">
                                <td>Monthly Target</td>
                                <td><input class="txTarget targetjan2" name="targetjan2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetfeb2" name="targetfeb2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetmar2" name="targetmar2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetapr2" name="targetapr2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetmay2" name="targetmay2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetjun2" name="targetjun2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetjul2" name="targetjul2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetaug2" name="targetaug2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetsep2" name="targetsep2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetoct2" name="targetoct2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetnov2" name="targetnov2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txTarget targetdec2" name="targetdec2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                            </tr>
                            <tr style="height:20px;">&nbsp;</tr>
                            <tr style="height:20px;">
                                <td>Monthly Saving</td>
                                <td><input class="txSaving savingjan2" name="savingjan2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingfeb2" name="savingfeb2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingmar2" name="savingmar2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingapr2" name="savingapr2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingmay2" name="savingmay2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingjun2" name="savingjun2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingjul2" name="savingjul2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingaug2" name="savingaug2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingsep2" name="savingsep2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingoct2" name="savingoct2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingnov2" name="savingnov2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                                <td><input class="txSaving savingdec2" name="savingdec2" style="width:125px;" type="text" onkeypress="return isNumberKey(event)"/></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row-fluid">
        <div class="widget-box">
            <div class="widget-content">
                <div class="row-fluid">
                    <div class="span12">
                        <div class="span9">&nbsp;</div>
                        <div class="span3" style="padding-top: 12px;">
                            <button id="btnDuplicate" class="btn btn-info">Duplicate Initiative</button>&nbsp;
                            <button id="btnSave" class="btn btn-success">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Save&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>&nbsp;
                            <button id="btnClose" class="btn btn-danger">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Close&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>
                            <input id="FormID" type="hidden" name="FormID" />
                            <input id="FormStatus" type="hidden" name="FormStatus" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <script type="text/javascript">
    $(function () {
        $("#btnSave").on('click', function () {
            Swal.fire({
                title: 'Do you want to save the changes?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Save'
            }).then((result) => {
                if (result.isConfirmed) {
                    var xFormStatus = $("#FormStatus").val();
                    var xFormID = $("#FormID").val();
                    var xGrdSubCountry = GrdSubCountryPopup.GetValue();
                    var xGrdBrand = GrdBrandPopup.GetValue();
                    var xGrdLegalEntity = GrdLegalEntityPopup.GetValue();
                    var xGrdCountry = $("#GrdCountryVal").val();
                    var xGrdRegional = $("#GrdRegionalVal").val();
                    var xGrdSubRegion = $("#GrdSubRegionVal").val();
                    var xGrdCluster = $("#GrdClusterVal").val();
                    var xGrdRegionalOffice = $("#GrdRegionalOfficeVal").val();
                    var xGrdCostControl = $("#GrdCostControlVal").val();
                    var xCboConfidential = CboConfidential.GetValue();
                    var xTxResponsibleName = $("#TxResponsibleName").val();
                    var xTxDesc = $("#TxDesc").val();
                    var xGrdInitStatus = GrdInitStatus.GetValue();
                    var xTxLaraCode = $("#TxLaraCode").val();
                    var xTxPortName = (TxPortName.GetValue() == 0 ? 1 : TxPortName.GetValue());
                    var xTxVendorSupp = $("#TxVendorSupp").val();
                    var xTxAdditionalInfo = $("#TxAdditionalInfo").val();
                    var xGrdInitType = GrdInitType.GetValue();
                    var xGrdInitCategory = GrdInitCategory.GetValue();
                    var xGrdSubCost = GrdSubCost.GetValue();
                    var xGrdActionType = GrdActionType.GetValue();
                    var xGrdSynImpact = GrdSynImpact.GetValue();
                    var xStartMonth = StartMonth.GetValue();
                    if (xStartMonth != null) xStartMonth = xStartMonth.format("Y-m-d");
                    var xEndMonth = EndMonth.GetValue();
                    if (xEndMonth != null) xEndMonth = xEndMonth.format("Y-m-d");
                    var xTxAgency = $("#TxAgency").val();
                    var xTxRPOCComment = $("#TxRPOCComment").val();
                    var xTxHOComment = $("#TxHOComment").val();
                    var xCboHoValidity = CboHoValidity.GetValue();
                    var xCboRPOCValidity = CboRPOCValidity.GetValue();
                    var xTxTarget12 = txTarget12.GetValue();
                    var xTxTargetFullYear = txTargetFullYear.GetValue();
                    var xTxYTDTargetFullYear = txYTDTargetFullYear.GetValue();
                    var xTxYTDSavingFullYear = txYTDSavingFullYear.GetValue();
                    var xProjectYear = CboYear.GetText();
                    var xRelatedInitiative = LblRelatedInitiative.GetValue();
                    var xCboWebinarCat = CboWebinarCat.GetValue();

                    var targetjan = $(".targetjan").val(); var targetfeb = $(".targetfeb").val(); var targetmar = $(".targetmar").val(); var targetapr = $(".targetapr").val(); var targetmay = $(".targetmay").val();
                    var targetjun = $(".targetjun").val(); var targetjul = $(".targetjul").val(); var targetaug = $(".targetaug").val(); var targetsep = $(".targetsep").val(); var targetoct = $(".targetoct").val();
                    var targetnov = $(".targetnov").val(); var targetdec = $(".targetdec").val();
                    var targetjan2 = $(".targetjan2").val(); var targetfeb2 = $(".targetfeb2").val(); var targetmar2 = $(".targetmar2").val(); var targetapr2 = $(".targetapr2").val(); var targetmay2 = $(".targetmay2").val();
                    var targetjun2 = $(".targetjun2").val(); var targetjul2 = $(".targetjul2").val(); var targetaug2 = $(".targetaug2").val(); var targetsep2 = $(".targetsep2").val(); var targetoct2 = $(".targetoct2").val();
                    var targetnov2 = $(".targetnov2").val(); var targetdec2 = $(".targetdec2").val();

                    var savingjan = $(".savingjan").val(); var savingfeb = $(".savingfeb").val(); var savingmar = $(".savingmar").val(); var savingapr = $(".savingapr").val(); var savingmay = $(".savingmay").val();
                    var savingjun = $(".savingjun").val(); var savingjul = $(".savingjul").val(); var savingaug = $(".savingaug").val(); var savingsep = $(".savingsep").val(); var savingoct = $(".savingoct").val();
                    var savingnov = $(".savingnov").val(); var savingdec = $(".savingdec").val();
                    var savingjan2 = $(".savingjan2").val(); var savingfeb2 = $(".savingfeb2").val(); var savingmar2 = $(".savingmar2").val(); var savingapr2 = $(".savingapr2").val(); var savingmay2 = $(".savingmay2").val();
                    var savingjun2 = $(".savingjun2").val(); var savingjul2 = $(".savingjul2").val(); var savingaug2 = $(".savingaug2").val(); var savingsep2 = $(".savingsep2").val(); var savingoct2 = $(".savingoct2").val();
                    var savingnov2 = $(".savingnov2").val(); var savingdec2 = $(".savingdec2").val();

                    if (
                        xGrdSubCountry != null && xGrdBrand != null && xGrdLegalEntity != null && xGrdCountry != null && xGrdRegional != null &&
                        xGrdSubRegion != null && xGrdCluster != null && xGrdRegionalOffice != null && xGrdCostControl != null && xCboConfidential != null &&
                        xGrdInitStatus > 0 && xGrdInitType != null && xGrdInitCategory != null && xGrdSubCost != null && xGrdActionType != null &&
                        xGrdSynImpact != null && xStartMonth != null && xEndMonth != null
                    ) {
                        $.post("@Url.Content("~/ActiveInitiative/SaveNew")", {
                            FormID: xFormID,
                            FormStatus: xFormStatus,
                            GrdSubCountry: xGrdSubCountry,
                            GrdBrand: xGrdBrand,
                            GrdLegalEntity: xGrdLegalEntity,
                            GrdCountry: xGrdCountry,
                            GrdRegional: xGrdRegional,
                            GrdSubRegion: xGrdSubRegion,
                            GrdCluster: xGrdCluster,
                            GrdRegionalOffice: xGrdRegionalOffice,
                            GrdCostControl: xGrdCostControl,
                            CboConfidential: xCboConfidential,
                            TxResponsibleName: xTxResponsibleName,
                            TxDesc: xTxDesc,
                            GrdInitStatus: xGrdInitStatus,
                            TxLaraCode: xTxLaraCode,
                            TxPortName: xTxPortName,
                            TxVendorSupp: xTxVendorSupp,
                            TxAdditionalInfo: xTxAdditionalInfo,
                            GrdInitType: xGrdInitType,
                            GrdInitCategory: xGrdInitCategory,
                            GrdSubCost: xGrdSubCost,
                            GrdActionType: xGrdActionType,
                            GrdSynImpact: xGrdSynImpact,
                            StartMonth: xStartMonth,
                            EndMonth: xEndMonth,
                            TxAgency: xTxAgency,
                            TxRPOCComment: xTxRPOCComment,
                            TxHOComment: xTxHOComment,
                            CboHoValidity: xCboHoValidity,
                            CboRPOCValidity: xCboRPOCValidity,
                            TxTarget12: xTxTarget12,
                            TxTargetFullYear: xTxTargetFullYear,
                            TxYTDTargetFullYear: xTxYTDTargetFullYear,
                            TxYTDSavingFullYear: xTxYTDSavingFullYear,
                            ProjectYear: xProjectYear,
                            RelatedInitiative: xRelatedInitiative,
                            SourceCategory: xCboWebinarCat,
                            targetjan: targetjan, targetfeb: targetfeb, targetmar: targetmar, targetapr: targetapr, targetmay: targetmay, targetjun: targetjun, targetjul: targetjul, targetaug: targetaug,targetsep:targetsep,targetoct:targetoct,targetnov:targetnov,targetdec:targetdec,
                            targetjan2: targetjan2, targetfeb2: targetfeb2, targetmar2: targetmar2, targetapr2: targetapr2, targetmay2: targetmay2, targetjun2: targetjun2, targetjul2: targetjul2, targetaug2: targetaug2,targetsep2:targetsep2,targetoct2:targetoct2,targetnov2:targetnov2,targetdec2:targetdec2,
                            savingjan: savingjan, savingfeb: savingfeb, savingmar: savingmar, savingapr: savingapr, savingmay: savingmay, savingjun: savingjun, savingjul: savingjul, savingaug: savingaug,savingsep:savingsep,savingoct:savingoct,savingnov:savingnov,savingdec:savingdec,
                            savingjan2: savingjan2, savingfeb2: savingfeb2, savingmar2: savingmar2, savingapr2: savingapr2, savingmay2: savingmay2, savingjun2: savingjun2, savingjul2: savingjul2, savingaug2: savingaug2,savingsep2:savingsep2,savingoct2:savingoct2,savingnov2:savingnov2,savingdec2:savingdec2
                        }, function (data) {
                                if (data.substring(0, 5) == "saved") {
                                    if (xFormStatus=="New") $("#initsukses").html("New Initiative Number: " + data.substring(6, data.length)); else $("#initsukses").html("Initiative successfully saved!");
                                    $("#btnEdit").click(); $("#btnClose").click();
                                    WindowInitiative.Hide();
                                    WindowOkSaved.Show();
                                }
                        });
                    }
                    else {
                        Swal.fire(
                            'Mandatory field cannot blank',
                            'You must enter all mandatory field which marked as <font color="red">red asterisk</font>',
                            'error'
                        );
                    }
                }
            })
        });

        $("#btnEditx").on('click', function () {
            var n = $(this).text();
            if (n === "Cancel") {
                $(this).text("Edit");
                $("#chkAuto").prop('disabled',true);
                CheckUncheck();
            } else if (n === "Edit") {
                $(this).text("Cancel");
                $("#chkAuto").prop('disabled', false);
                CheckUncheck();
            }
        });

        $("#btnClose").on('click', function () {
            WindowInitiative.Hide();
        });

        $("#btnDuplicate").on("click", function () {
            $("#FormStatus").val("New");
            $("#LblInitiative").text("DUP-0001");
            $("#btnDuplicate").prop("disabled", true);
            $.post('@Url.Content("~/ActiveInitiative/GrdSubCountryPartial")', { Id: null }, function (data) {
                var obj; GrdSubCountryPopup.ClearItems();
                $.each(data[0]["SubCountryData"], function (key, value) {
                    value = JSON.stringify(value); obj = JSON.parse(value);
                    GrdSubCountryPopup.AddItem(obj.SubCountryName, obj.id);
                });
                GrdSubCountryPopup.SelectIndex(0);
            });
            Swal.fire(
                'Duplicated Successfully',
                'Initiative has been duplicated successfully. You can save it now.',
                'success'
            );
        });
    });

    function CheckUncheckx() {
        var chkAuto = $("#btnEdit").text();
        if (chkAuto == "Cancel") {
            $('input[name=txTarget12]').prop('disabled', false);
            $('input[name=txTarget12]').attr('class', 'dxeEditArea_Office2010Blue dxeEditAreaSys');
            $('input[name=txTargetFullYear]').prop('disabled', false);
            $('input[name=txTargetFullYear]').attr('class', 'dxeEditArea_Office2010Blue dxeEditAreaSys');
            $('input[name=txYTDTargetFullYear]').prop('disabled', false);
            $('input[name=txYTDTargetFullYear]').attr('class', 'dxeEditArea_Office2010Blue dxeEditAreaSys');
            $('input[name=txYTDSavingFullYear]').prop('disabled', false);
            $('input[name=txYTDSavingFullYear]').attr('class', 'dxeEditArea_Office2010Blue dxeEditAreaSys');
            $('.txSaving,#btnDuplicate,#btnSave,#TxResponsibleName,#TxDesc,#TxLaraCode,#TxPortName,#TxVendorSupp,#TxAdditionalInfo,#TxAgency,#TxRPOCComment,#TxHOComment').prop('disabled', false);
            $('#btnClose').prop('disabled', true);
            GrdSubCountryPopup.SetEnabled(true); GrdBrandPopup.SetEnabled(true); GrdLegalEntityPopup.SetEnabled(true); CboConfidential.SetEnabled(true); GrdInitStatus.SetEnabled(true); GrdInitType.SetEnabled(true);
            GrdSynImpact.SetEnabled(true); StartMonth.SetEnabled(true); EndMonth.SetEnabled(true); CboHoValidity.SetEnabled(true); CboRPOCValidity.SetEnabled(true); GrdInitCategory.SetEnabled(true); GrdSubCost.SetEnabled(true);
            GrdActionType.SetEnabled(true); TxPortName.SetEnabled(true);
        }
        else {
            $('input[name=txTarget12]').prop('disabled', true);
            $('input[name=txTarget12]').attr('class', 'dxeEditArea_Office2010Blue dxeEditAreaSys dxeDisabled_Office2010Blue');
            $('input[name=txTargetFullYear]').prop('disabled', true);
            $('input[name=txTargetFullYear]').attr('class', 'dxeEditArea_Office2010Blue dxeEditAreaSys dxeDisabled_Office2010Blue');
            $('input[name=txYTDTargetFullYear]').prop('disabled', true);
            $('input[name=txYTDTargetFullYear]').attr('class', 'dxeEditArea_Office2010Blue dxeEditAreaSys dxeDisabled_Office2010Blue');
            $('input[name=txYTDSavingFullYear]').prop('disabled', true);
            $('input[name=txYTDSavingFullYear]').attr('class', 'dxeEditArea_Office2010Blue dxeEditAreaSys dxeDisabled_Office2010Blue');
            $('.txSaving,#btnDuplicate,#btnSave,#TxResponsibleName,#TxDesc,#TxLaraCode,#TxPortName,#TxVendorSupp,#TxAdditionalInfo,#TxAgency,#TxRPOCComment,#TxHOComment').prop('disabled', true);
            $('#btnClose').prop('disabled', false);
            GrdBrandPopup.ClearItems(); GrdLegalEntityPopup.ClearItems();
            GrdInitCategory.ClearItems(); GrdSubCost.ClearItems();
            GrdSubCountryPopup.SetEnabled(false); GrdBrandPopup.SetEnabled(false); GrdLegalEntityPopup.SetEnabled(false); CboConfidential.SetEnabled(false); GrdInitStatus.SetEnabled(false); GrdInitType.SetEnabled(false);
            GrdSynImpact.SetEnabled(false); StartMonth.SetEnabled(false); EndMonth.SetEnabled(false); CboHoValidity.SetEnabled(false); CboRPOCValidity.SetEnabled(false); GrdInitCategory.SetEnabled(false);
            GrdSubCost.SetEnabled(false); GrdActionType.SetEnabled(false); TxPortName.SetEnabled(false);
        }
    }

    function CheckUncheckCalculate() {
        var targetstartselected = false;var targetstartselected2 = true; var startmon;
        if ($('#chkAuto').is(':checked')) {
            const targetty = new Array("targetjan", "targetfeb", "targetmar", "targetapr", "targetmay", "targetjun", "targetjul", "targetaug", "targetsep", "targetoct", "targetnov", "targetdec","targetjan2", "targetfeb2", "targetmar2", "targetapr2", "targetmay2", "targetjun2", "targetjul2", "targetaug2", "targetsep2", "targetoct2", "targetnov2", "targetdec2");
            //const targetty = new Array("targetjan", "targetfeb", "targetmar", "targetapr", "targetmay", "targetjun", "targetjul", "targetaug", "targetsep", "targetoct", "targetnov", "targetdec");
            startmon = ((moment(StartMonth.GetValue()).format("M")) - 1);
            var months; var x = 0;
            months = (EndMonth.GetValue().getFullYear() - StartMonth.GetValue().getFullYear()) * 12;
            months -= StartMonth.GetValue().getMonth();
            months += EndMonth.GetValue().getMonth();
            months++;

            var nilai = Number(txTarget12.GetValue() / months).toFixed(2);
            var arrnilai = [];
            for (var a = 0; a <= months; a++) {
                arrnilai[a] = nilai;
            }
            for (var i = 0; i < targetty.length; i++) {
                if (i >= startmon && x < months) {
                    targetstartselected = true;
                } else {
                    targetstartselected = false;
                }

                if (targetstartselected == true) {
                    $("." + targetty[i]).val(arrnilai[x]);
                    $("." + targetty[i]).prop('disabled', false);
                    $("." + targetty[i]).prop('readonly', true);
                    x++;
                } else {
                    $("." + targetty[i]).val("");
                    $("." + targetty[i]).prop('disabled', true);
                    $("." + targetty[i]).prop('readonly', false);
                }
            }
            getYtdValue();
        } else {
            $('.txTarget').val("");
            $('.txTarget').prop('disabled', false);
            $('.txTarget').prop('readonly', false);
        }
    }

    function getYtdValue() {
        const targetty = new Array("targetjan", "targetfeb", "targetmar", "targetapr", "targetmay", "targetjun", "targetjul", "targetaug", "targetsep", "targetoct", "targetnov", "targetdec", "targetjan2", "targetfeb2", "targetmar2", "targetapr2", "targetmay2", "targetjun2", "targetjul2", "targetaug2", "targetsep2", "targetoct2", "targetnov2", "targetdec2");
        const savingty = new Array("savingjan", "savingfeb", "savingmar", "savingapr", "savingmay", "savingjun", "savingjul", "savingaug", "savingsep", "savingoct", "savingnov", "savingdec", "savingjan2", "savingfeb2", "savingmar2", "savingapr2", "savingmay2", "savingjun2", "savingjul2", "savingaug2", "savingsep2", "savingoct2", "savingnov2", "savingdec2");
        var d = new Date();
        var m = d.getMonth(); var nilai = 0; var hitung = 0; var saving = 0; var hitungsaving = 0;
        for (var o = 0; o < targetty.length; o++) {
            if (o <= m) {
                nilai = $("." + targetty[o]).val();
                if (nilai != "") {
                    nilai = parseFloat(nilai); hitung = parseFloat(hitung);
                    hitung = (nilai + hitung);
                }

                saving = $("." + savingty[o]).val();
                if (saving != "") {
                    saving = parseFloat(saving); hitungsaving = parseFloat(hitungsaving);
                    hitungsaving = (saving + hitungsaving);
                }
            }
        }
        txYTDTargetFullYear.SetValue(hitung);
        txYTDSavingFullYear.SetValue(hitungsaving);
    }
</script>