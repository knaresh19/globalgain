/** 
 * @overview datejs
 * @version 1.0.0-rc3
 * @author Gregory Wild-Smith <gregory@wild-smith.com>
 * @copyright 2014 Gregory Wild-Smith
 * @license MIT
 * @homepage https://github.com/abritinthebay/datejs
 */ !function () { var e = Date, n = Date.CultureStrings ? Date.CultureStrings.lang : null, i = {}, s = { getFromKey: function (e, n) { var i; return i = Date.CultureStrings && Date.CultureStrings[n] && Date.CultureStrings[n][e] ? Date.CultureStrings[n][e] : s.buildFromDefault(e), "/" === e.charAt(0) && (i = s.buildFromRegex(e, n)), i }, getFromObjectValues: function (e, n) { var i, a = {}; for (i in e) e.hasOwnProperty(i) && (a[i] = s.getFromKey(e[i], n)); return a }, getFromObjectKeys: function (e, n) { var i, a = {}; for (i in e) e.hasOwnProperty(i) && (a[s.getFromKey(i, n)] = e[i]); return a }, getFromArray: function (e, n) { for (var i = [], a = 0; a < e.length; a++)a in e && (i[a] = s.getFromKey(e[a], n)); return i }, buildFromDefault: function (e) { var n, i, s, a; switch (e) { case "name": n = "en-US"; break; case "englishName": case "nativeName": n = "English (United States)"; break; case "twoDigitYearMax": n = 2049; break; case "firstDayOfWeek": n = 0; break; default: n = e, (i = (s = e.split("_")).length) > 1 && "/" !== e.charAt(0) && ("initial" === (a = s[i - 1].toLowerCase()) || "abbr" === a) && (n = s[0]) }return n }, buildFromRegex: function (e, n) { var i; return Date.CultureStrings && Date.CultureStrings[n] && Date.CultureStrings[n][e] ? RegExp(Date.CultureStrings[n][e], "i") : RegExp(e.replace(RegExp("/", "g"), ""), "i") } }, a = function (e, n) { for (var i in n) n.hasOwnProperty(i) && (e[i] = n[i]) }, o = function (e, a) { var o = a || n; return (i[e] = e, "object" != typeof e) ? s.getFromKey(e, o) : e instanceof Array ? s.getFromArray(e, o) : s.getFromObjectKeys(e, o) }, u = function (e) { var n = Date.Config.i18n + e + ".js", i = document.getElementsByTagName("head")[0] || document.documentElement, s = document.createElement("script"); s.src = n; var a = { done: function () { } }; return s.onload = s.onreadystatechange = function () { this.readyState && "loaded" !== this.readyState && "complete" !== this.readyState || (a.done(), i.removeChild(s)) }, setTimeout(function () { i.insertBefore(s, i.firstChild) }, 0), { done: function (e) { a.done = function () { e && setTimeout(e, 0) } } } }, h = { buildFromMethodHash: function (e) { var n; for (n in e) e.hasOwnProperty(n) && (e[n] = h[e[n]]()); return e }, timeZoneDST: function () { return o({ CHADT: "+1345", NZDT: "+1300", AEDT: "+1100", ACDT: "+1030", AZST: "+0500", IRDT: "+0430", EEST: "+0300", CEST: "+0200", BST: "+0100", PMDT: "-0200", ADT: "-0300", NDT: "-0230", EDT: "-0400", CDT: "-0500", MDT: "-0600", PDT: "-0700", AKDT: "-0800", HADT: "-0900" }) }, timeZoneStandard: function () { return o({ LINT: "+1400", TOT: "+1300", CHAST: "+1245", NZST: "+1200", NFT: "+1130", SBT: "+1100", AEST: "+1000", ACST: "+0930", JST: "+0900", CWST: "+0845", CT: "+0800", ICT: "+0700", MMT: "+0630", BST: "+0600", NPT: "+0545", IST: "+0530", PKT: "+0500", AFT: "+0430", MSK: "+0400", IRST: "+0330", FET: "+0300", EET: "+0200", CET: "+0100", GMT: "+0000", UTC: "+0000", CVT: "-0100", GST: "-0200", BRT: "-0300", NST: "-0330", AST: "-0400", EST: "-0500", CST: "-0600", MST: "-0700", PST: "-0800", AKST: "-0900", MIT: "-0930", HST: "-1000", SST: "-1100", BIT: "-1200" }) }, timeZones: function (e) { var n; for (n in e.timezones = [], e.abbreviatedTimeZoneStandard) e.abbreviatedTimeZoneStandard.hasOwnProperty(n) && e.timezones.push({ name: n, offset: e.abbreviatedTimeZoneStandard[n] }); for (n in e.abbreviatedTimeZoneDST) e.abbreviatedTimeZoneDST.hasOwnProperty(n) && e.timezones.push({ name: n, offset: e.abbreviatedTimeZoneDST[n], dst: !0 }); return e.timezones }, days: function () { return o(["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]) }, dayAbbr: function () { return o(["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]) }, dayShortNames: function () { return o(["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]) }, dayFirstLetters: function () { return o(["S_Sun_Initial", "M_Mon_Initial", "T_Tues_Initial", "W_Wed_Initial", "T_Thu_Initial", "F_Fri_Initial", "S_Sat_Initial"]) }, months: function () { return o(["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]) }, monthAbbr: function () { return o(["Jan_Abbr", "Feb_Abbr", "Mar_Abbr", "Apr_Abbr", "May_Abbr", "Jun_Abbr", "Jul_Abbr", "Aug_Abbr", "Sep_Abbr", "Oct_Abbr", "Nov_Abbr", "Dec_Abbr"]) }, formatPatterns: function () { return s.getFromObjectValues({ shortDate: "M/d/yyyy", longDate: "dddd, MMMM dd, yyyy", shortTime: "h:mm tt", longTime: "h:mm:ss tt", fullDateTime: "dddd, MMMM dd, yyyy h:mm:ss tt", sortableDateTime: "yyyy-MM-ddTHH:mm:ss", universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ", rfc1123: "ddd, dd MMM yyyy HH:mm:ss", monthDay: "MMMM dd", yearMonth: "MMMM, yyyy" }, Date.i18n.currentLanguage()) }, regex: function () { return s.getFromObjectValues({ inTheMorning: "/( in the )(morn(ing)?)\\b/", thisMorning: "/(this )(morn(ing)?)\\b/", amThisMorning: "/(\b\\d(am)? )(this )(morn(ing)?)/", inTheEvening: "/( in the )(even(ing)?)\\b/", thisEvening: "/(this )(even(ing)?)\\b/", pmThisEvening: "/(\b\\d(pm)? )(this )(even(ing)?)/", jan: "/jan(uary)?/", feb: "/feb(ruary)?/", mar: "/mar(ch)?/", apr: "/apr(il)?/", may: "/may/", jun: "/jun(e)?/", jul: "/jul(y)?/", aug: "/aug(ust)?/", sep: "/sep(t(ember)?)?/", oct: "/oct(ober)?/", nov: "/nov(ember)?/", dec: "/dec(ember)?/", sun: "/^su(n(day)?)?/", mon: "/^mo(n(day)?)?/", tue: "/^tu(e(s(day)?)?)?/", wed: "/^we(d(nesday)?)?/", thu: "/^th(u(r(s(day)?)?)?)?/", fri: "/fr(i(day)?)?/", sat: "/^sa(t(urday)?)?/", future: "/^next/", past: "/^last|past|prev(ious)?/", add: "/^(\\+|aft(er)?|from|hence)/", subtract: "/^(\\-|bef(ore)?|ago)/", yesterday: "/^yes(terday)?/", today: "/^t(od(ay)?)?/", tomorrow: "/^tom(orrow)?/", now: "/^n(ow)?/", millisecond: "/^ms|milli(second)?s?/", second: "/^sec(ond)?s?/", minute: "/^mn|min(ute)?s?/", hour: "/^h(our)?s?/", week: "/^w(eek)?s?/", month: "/^m(onth)?s?/", day: "/^d(ay)?s?/", year: "/^y(ear)?s?/", shortMeridian: "/^(a|p)/", longMeridian: "/^(a\\.?m?\\.?|p\\.?m?\\.?)/", timezone: "/^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\\s*(\\+|\\-)\\s*\\d\\d\\d\\d?)|gmt|utc)/", ordinalSuffix: "/^\\s*(st|nd|rd|th)/", timeContext: "/^\\s*(\\:|a(?!u|p)|p)/" }, Date.i18n.currentLanguage()) } }, c = function () { var e = s.getFromObjectValues({ name: "name", englishName: "englishName", nativeName: "nativeName", amDesignator: "AM", pmDesignator: "PM", firstDayOfWeek: "firstDayOfWeek", twoDigitYearMax: "twoDigitYearMax", dateElementOrder: "mdy" }, Date.i18n.currentLanguage()); return a(e, h.buildFromMethodHash({ dayNames: "days", abbreviatedDayNames: "dayAbbr", shortestDayNames: "dayShortNames", firstLetterDayNames: "dayFirstLetters", monthNames: "months", abbreviatedMonthNames: "monthAbbr", formatPatterns: "formatPatterns", regexPatterns: "regex", abbreviatedTimeZoneDST: "timeZoneDST", abbreviatedTimeZoneStandard: "timeZoneStandard" })), h.timeZones(e), e }; e.i18n = { __: function (e, n) { return o(e, n) }, currentLanguage: function () { return n || "en-US" }, setLanguage: function (i, s, a) { var o = !1; if (s || "en-US" === i || Date.CultureStrings && Date.CultureStrings[i]) n = i, Date.CultureStrings = Date.CultureStrings || {}, Date.CultureStrings.lang = i, Date.CultureInfo = new c; else if (!(Date.CultureStrings && Date.CultureStrings[i])) { if ("undefined" != typeof exports && this.exports !== exports) try { require("../i18n/" + i + ".js"), n = i, Date.CultureStrings.lang = i, Date.CultureInfo = new c } catch (h) { throw Error("The DateJS IETF language tag '" + i + "' could not be loaded by Node. It likely does not exist.") } else { if (!Date.Config || !Date.Config.i18n) return Date.console.error("The DateJS IETF language tag '" + i + "' is not available and has not been loaded."), !1; o = !0, u(i).done(function () { n = i, Date.CultureStrings = Date.CultureStrings || {}, Date.CultureStrings.lang = i, Date.CultureInfo = new c, e.Parsing.Normalizer.buildReplaceData(), e.Grammar && e.Grammar.buildGrammarFormats(), a && setTimeout(a, 0) }) } } e.Parsing.Normalizer.buildReplaceData(), e.Grammar && e.Grammar.buildGrammarFormats(), !o && a && setTimeout(a, 0) }, getLoggedKeys: function () { return i }, updateCultureInfo: function () { Date.CultureInfo = new c } }, e.i18n.updateCultureInfo() }(), function () { var e = Date, n = e.prototype, i = function (e, n) { return n || (n = 2), ("000" + e).slice(-1 * n) }; "undefined" != typeof window && void 0 !== window.console && void 0 !== window.console.log ? e.console = console : e.console = { log: function () { }, error: function () { } }, e.Config = e.Config || {}, e.initOverloads = function () { e.now ? e._now || (e._now = e.now) : e._now = function e() { return new Date().getTime() }, e.now = function (n) { return n ? e.present() : e._now() }, n.toISOString || (n.toISOString = function () { return this.getUTCFullYear() + "-" + i(this.getUTCMonth() + 1) + "-" + i(this.getUTCDate()) + "T" + i(this.getUTCHours()) + ":" + i(this.getUTCMinutes()) + ":" + i(this.getUTCSeconds()) + "." + String((this.getUTCMilliseconds() / 1e3).toFixed(3)).slice(2, 5) + "Z" }), void 0 === n._toString && (n._toString = n.toString) }, e.initOverloads(), e.today = function () { return new Date().clearTime() }, e.present = function () { return new Date }, e.compare = function (e, n) { if (isNaN(e) || isNaN(n)) throw Error(e + " - " + n); if (e instanceof Date && n instanceof Date) return e < n ? -1 : e > n ? 1 : 0; throw TypeError(e + " - " + n) }, e.equals = function (e, n) { return 0 === e.compareTo(n) }, e.getDayName = function (e) { return Date.CultureInfo.dayNames[e] }, e.getDayNumberFromName = function (e) { for (var n = Date.CultureInfo.dayNames, i = Date.CultureInfo.abbreviatedDayNames, s = Date.CultureInfo.shortestDayNames, a = e.toLowerCase(), o = 0; o < n.length; o++)if (n[o].toLowerCase() === a || i[o].toLowerCase() === a || s[o].toLowerCase() === a) return o; return -1 }, e.getMonthNumberFromName = function (e) { for (var n = Date.CultureInfo.monthNames, i = Date.CultureInfo.abbreviatedMonthNames, s = e.toLowerCase(), a = 0; a < n.length; a++)if (n[a].toLowerCase() === s || i[a].toLowerCase() === s) return a; return -1 }, e.getMonthName = function (e) { return Date.CultureInfo.monthNames[e] }, e.isLeapYear = function (e) { return e % 4 == 0 && e % 100 != 0 || e % 400 == 0 }, e.getDaysInMonth = function (n, i) { return !i && e.validateMonth(n) && (i = n, n = Date.today().getFullYear()), [31, e.isLeapYear(n) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][i] }, n.getDaysInMonth = function () { return e.getDaysInMonth(this.getFullYear(), this.getMonth()) }, e.getTimezoneAbbreviation = function (e, n) { var i, s = n ? Date.CultureInfo.abbreviatedTimeZoneDST : Date.CultureInfo.abbreviatedTimeZoneStandard; for (i in s) if (s.hasOwnProperty(i) && s[i] === e) return i; return null }, e.getTimezoneOffset = function (e, n) { var i, s = [], a = Date.CultureInfo.timezones; for (e || (e = new Date().getTimezone()), i = 0; i < a.length; i++)a[i].name === e.toUpperCase() && s.push(i); if (!a[s[0]]) return null; if (1 === s.length || !n) return a[s[0]].offset; for (i = 0; i < s.length; i++)if (a[s[i]].dst) return a[s[i]].offset }, e.getQuarter = function (e) { return (e = e || new Date), [1, 2, 3, 4][Math.floor(e.getMonth() / 3)] }, e.getDaysLeftInQuarter = function (e) { e = e || new Date; var n = new Date(e); return n.setMonth(n.getMonth() + 3 - n.getMonth() % 3, 0), Math.floor((n - e) / 864e5) }; var s = function (e, n, i, s) { if (s = s || "Object", void 0 === e) return !1; if ("number" != typeof e) throw TypeError(e + " is not a Number."); return !(e < n) && !(e > i) }; e.validateMillisecond = function (e) { return s(e, 0, 999, "millisecond") }, e.validateSecond = function (e) { return s(e, 0, 59, "second") }, e.validateMinute = function (e) { return s(e, 0, 59, "minute") }, e.validateHour = function (e) { return s(e, 0, 23, "hour") }, e.validateDay = function (n, i, a) { return null != i && null != a && s(n, 1, e.getDaysInMonth(i, a), "day") }, e.validateWeek = function (e) { return s(e, 0, 53, "week") }, e.validateMonth = function (e) { return s(e, 0, 11, "month") }, e.validateYear = function (e) { return s(e, -271822, 275760, "year") }, e.validateTimezone = function (e) { return 1 === ({ ACDT: 1, ACST: 1, ACT: 1, ADT: 1, AEDT: 1, AEST: 1, AFT: 1, AKDT: 1, AKST: 1, AMST: 1, AMT: 1, ART: 1, AST: 1, AWDT: 1, AWST: 1, AZOST: 1, AZT: 1, BDT: 1, BIOT: 1, BIT: 1, BOT: 1, BRT: 1, BST: 1, BTT: 1, CAT: 1, CCT: 1, CDT: 1, CEDT: 1, CEST: 1, CET: 1, CHADT: 1, CHAST: 1, CHOT: 1, ChST: 1, CHUT: 1, CIST: 1, CIT: 1, CKT: 1, CLST: 1, CLT: 1, COST: 1, COT: 1, CST: 1, CT: 1, CVT: 1, CWST: 1, CXT: 1, DAVT: 1, DDUT: 1, DFT: 1, EASST: 1, EAST: 1, EAT: 1, ECT: 1, EDT: 1, EEDT: 1, EEST: 1, EET: 1, EGST: 1, EGT: 1, EIT: 1, EST: 1, FET: 1, FJT: 1, FKST: 1, FKT: 1, FNT: 1, GALT: 1, GAMT: 1, GET: 1, GFT: 1, GILT: 1, GIT: 1, GMT: 1, GST: 1, GYT: 1, HADT: 1, HAEC: 1, HAST: 1, HKT: 1, HMT: 1, HOVT: 1, HST: 1, ICT: 1, IDT: 1, IOT: 1, IRDT: 1, IRKT: 1, IRST: 1, IST: 1, JST: 1, KGT: 1, KOST: 1, KRAT: 1, KST: 1, LHST: 1, LINT: 1, MAGT: 1, MART: 1, MAWT: 1, MDT: 1, MET: 1, MEST: 1, MHT: 1, MIST: 1, MIT: 1, MMT: 1, MSK: 1, MST: 1, MUT: 1, MVT: 1, MYT: 1, NCT: 1, NDT: 1, NFT: 1, NPT: 1, NST: 1, NT: 1, NUT: 1, NZDT: 1, NZST: 1, OMST: 1, ORAT: 1, PDT: 1, PET: 1, PETT: 1, PGT: 1, PHOT: 1, PHT: 1, PKT: 1, PMDT: 1, PMST: 1, PONT: 1, PST: 1, PYST: 1, PYT: 1, RET: 1, ROTT: 1, SAKT: 1, SAMT: 1, SAST: 1, SBT: 1, SCT: 1, SGT: 1, SLST: 1, SRT: 1, SST: 1, SYOT: 1, TAHT: 1, THA: 1, TFT: 1, TJT: 1, TKT: 1, TLT: 1, TMT: 1, TOT: 1, TVT: 1, UCT: 1, ULAT: 1, UTC: 1, UYST: 1, UYT: 1, UZT: 1, VET: 1, VLAT: 1, VOLT: 1, VOST: 1, VUT: 1, WAKT: 1, WAST: 1, WAT: 1, WEDT: 1, WEST: 1, WET: 1, WST: 1, YAKT: 1, YEKT: 1, Z: 1 })[e] }, e.validateTimezoneOffset = function (e) { return e > -841 && e < 721 } }(), function () { var e = Date, n = e.prototype, i = function (e, n) { return n || (n = 2), ("000" + e).slice(-1 * n) }, s = function (n) { var i, s, a = {}, o = this; for (i in s = function (i, s, a) { if ("day" !== i) return e[s](a); var u = void 0 !== n.month ? n.month : o.getMonth(), h = void 0 !== n.year ? n.year : o.getFullYear(); return e[s](a, h, u) }, n) if (hasOwnProperty.call(n, i)) { var u = "validate" + i.charAt(0).toUpperCase() + i.slice(1); e[u] && null !== n[i] && s(i, u, n[i]) && (a[i] = n[i]) } return a }; n.clearTime = function () { return this.setHours(0), this.setMinutes(0), this.setSeconds(0), this.setMilliseconds(0), this }, n.setTimeToNow = function () { var e = new Date; return this.setHours(e.getHours()), this.setMinutes(e.getMinutes()), this.setSeconds(e.getSeconds()), this.setMilliseconds(e.getMilliseconds()), this }, n.clone = function () { return new Date(this.getTime()) }, n.compareTo = function (e) { return Date.compare(this, e) }, n.equals = function (e) { return Date.equals(this, void 0 !== e ? e : new Date) }, n.between = function (e, n) { return this.getTime() >= e.getTime() && this.getTime() <= n.getTime() }, n.isAfter = function (e) { return 1 === this.compareTo(e || new Date) }, n.isBefore = function (e) { return -1 === this.compareTo(e || new Date) }, n.isToday = n.isSameDay = function (e) { return this.clone().clearTime().equals((e || new Date).clone().clearTime()) }, n.addMilliseconds = function (e) { return e && this.setTime(this.getTime() + 1 * e), this }, n.addSeconds = function (e) { return e ? this.addMilliseconds(1e3 * e) : this }, n.addMinutes = function (e) { return e ? this.addMilliseconds(6e4 * e) : this }, n.addHours = function (e) { return e ? this.addMilliseconds(36e5 * e) : this }, n.addDays = function (e) { return e && this.setDate(this.getDate() + 1 * e), this }, n.addWeekdays = function (e) { if (!e) return this; var n = this.getDay(), i = Math.ceil(Math.abs(e) / 7); if ((0 === n || 6 === n) && e > 0 && (this.next().monday(), this.addDays(-1), n = this.getDay()), e < 0) { for (; e < 0;)this.addDays(-1), 0 !== (n = this.getDay()) && 6 !== n && e++; return this } return (e > 5 || 6 - n <= e) && (e += 2 * i), this.addDays(e) }, n.addWeeks = function (e) { return e ? this.addDays(7 * e) : this }, n.addMonths = function (n) { if (!n) return this; var i = this.getDate(); return this.setDate(1), this.setMonth(this.getMonth() + 1 * n), this.setDate(Math.min(i, e.getDaysInMonth(this.getFullYear(), this.getMonth()))), this }, n.addQuarters = function (e) { return e ? this.addMonths(3 * e) : this }, n.addYears = function (e) { return e ? this.addMonths(12 * e) : this }, n.add = function (e) { if ("number" == typeof e) return this._orient = e, this; var n = e; return n.day && n.day - this.getDate() != 0 && this.setDate(n.day), n.milliseconds && this.addMilliseconds(n.milliseconds), n.seconds && this.addSeconds(n.seconds), n.minutes && this.addMinutes(n.minutes), n.hours && this.addHours(n.hours), n.weeks && this.addWeeks(n.weeks), n.months && this.addMonths(n.months), n.years && this.addYears(n.years), n.days && this.addDays(n.days), this }, n.getWeek = function (e) { var n, i = new Date(this.valueOf()); e ? (i.addMinutes(i.getTimezoneOffset()), n = i.clone()) : n = this; var s = (n.getDay() + 6) % 7; i.setDate(i.getDate() - s + 3); var a = i.valueOf(); return i.setMonth(0, 1), 4 !== i.getDay() && i.setMonth(0, 1 + (4 - i.getDay() + 7) % 7), 1 + Math.ceil((a - i) / 6048e5) }, n.getISOWeek = function () { return i(this.getWeek(!0)) }, n.setWeek = function (e) { return e - this.getWeek() != 0 ? this.moveToDayOfWeek(1, this.getDay() > 1 ? -1 : 1).addWeeks(e - this.getWeek()) : 1 !== this.getDay() ? this.moveToDayOfWeek(1, this.getDay() > 1 ? -1 : 1) : this }, n.setQuarter = function (e) { return this.setMonth(Math.abs((e - 1) * 3 + 1), 1) }, n.getQuarter = function () { return Date.getQuarter(this) }, n.getDaysLeftInQuarter = function () { return Date.getDaysLeftInQuarter(this) }, n.moveToNthOccurrence = function (e, n) { if ("Weekday" === e) { if (n > 0) this.moveToFirstDayOfMonth(), this.is().weekday() && (n -= 1); else { if (!(n < 0)) return this; this.moveToLastDayOfMonth(), this.is().weekday() && (n += 1) } return this.addWeekdays(n) } var i = 0; if (n > 0) i = n - 1; else if (-1 === n) return this.moveToLastDayOfMonth(), this.getDay() !== e && this.moveToDayOfWeek(e, -1), this; return this.moveToFirstDayOfMonth().addDays(-1).moveToDayOfWeek(e, 1).addWeeks(i) }; var a = function (e, n, i) { return function (s, a) { var o = (s - this[e]() + i * (a || 1)) % i; return this[n](0 === o ? o += i * (a || 1) : o) } }; n.moveToDayOfWeek = a("getDay", "addDays", 7), n.moveToMonth = a("getMonth", "addMonths", 12), n.getOrdinate = function () { return o(this.getDate()) }, n.getOrdinalNumber = function () { return Math.ceil((this.clone().clearTime() - new Date(this.getFullYear(), 0, 1)) / 864e5) + 1 }, n.getTimezone = function () { return e.getTimezoneAbbreviation(this.getUTCOffset(), this.isDaylightSavingTime()) }, n.setTimezoneOffset = function (e) { var n = this.getTimezoneOffset(), i = -6 * Number(e) / 10; return i || 0 === i ? this.addMinutes(i - n) : this }, n.setTimezone = function (n) { return this.setTimezoneOffset(e.getTimezoneOffset(n)) }, n.hasDaylightSavingTime = function () { return Date.today().set({ month: 0, day: 1 }).getTimezoneOffset() !== Date.today().set({ month: 6, day: 1 }).getTimezoneOffset() }, n.isDaylightSavingTime = function () { return Date.today().set({ month: 0, day: 1 }).getTimezoneOffset() !== this.getTimezoneOffset() }, n.getUTCOffset = function (e) { var n, i = -10 * (e || this.getTimezoneOffset()) / 6; return i < 0 ? (n = (i - 1e4).toString()).charAt(0) + n.substr(2) : "+" + (n = (i + 1e4).toString()).substr(1) }, n.getElapsed = function (e) { return (e || new Date) - this }, n.set = function (e) { for (n in e = s.call(this, e)) if (hasOwnProperty.call(e, n)) { var n, i, a, o = n.charAt(0).toUpperCase() + n.slice(1); "week" !== n && "month" !== n && "timezone" !== n && "timezoneOffset" !== n && (o += "s"), i = "add" + o, a = "get" + o, "month" === n ? i += "s" : "year" === n && (a = "getFullYear"), "day" !== n && "timezone" !== n && "timezoneOffset" !== n && "week" !== n && "hour" !== n ? this[i](e[n] - this[a]()) : ("timezone" === n || "timezoneOffset" === n || "week" === n || "hour" === n) && this["set" + o](e[n]) } return e.day && this.addDays(e.day - this.getDate()), this }, n.moveToFirstDayOfMonth = function () { return this.set({ day: 1 }) }, n.moveToLastDayOfMonth = function () { return this.set({ day: e.getDaysInMonth(this.getFullYear(), this.getMonth()) }) }; var o = function (e) { switch (1 * e) { case 1: case 21: case 31: return "st"; case 2: case 22: return "nd"; case 3: case 23: return "rd"; default: return "th" } }, u = function (e) { var n, i = Date.CultureInfo.formatPatterns; switch (e) { case "d": return this.toString(i.shortDate); case "D": return this.toString(i.longDate); case "F": return this.toString(i.fullDateTime); case "m": return this.toString(i.monthDay); case "r": case "R": return (n = this.clone().addMinutes(this.getTimezoneOffset())).toString(i.rfc1123) + " GMT"; case "s": return this.toString(i.sortableDateTime); case "t": return this.toString(i.shortTime); case "T": return this.toString(i.longTime); case "u": return (n = this.clone().addMinutes(this.getTimezoneOffset())).toString(i.universalSortableDateTime); case "y": return this.toString(i.yearMonth); default: return !1 } }; n.toString = function (n, s) { if (!s && n && 1 === n.length && (output = u.call(this, n))) return output; var a, h = (a = this, function (n) { if ("\\" === n.charAt(0)) return n.replace("\\", ""); switch (n) { case "hh": return i(13 > a.getHours() ? 0 === a.getHours() ? 12 : a.getHours() : a.getHours() - 12); case "h": return 13 > a.getHours() ? 0 === a.getHours() ? 12 : a.getHours() : a.getHours() - 12; case "HH": return i(a.getHours()); case "H": return a.getHours(); case "mm": return i(a.getMinutes()); case "m": return a.getMinutes(); case "ss": return i(a.getSeconds()); case "s": return a.getSeconds(); case "yyyy": return i(a.getFullYear(), 4); case "yy": return i(a.getFullYear()); case "y": return a.getFullYear(); case "E": case "dddd": return Date.CultureInfo.dayNames[a.getDay()]; case "ddd": return Date.CultureInfo.abbreviatedDayNames[a.getDay()]; case "dd": return i(a.getDate()); case "d": return a.getDate(); case "MMMM": return Date.CultureInfo.monthNames[a.getMonth()]; case "MMM": return Date.CultureInfo.abbreviatedMonthNames[a.getMonth()]; case "MM": return i(a.getMonth() + 1); case "M": return a.getMonth() + 1; case "t": return 12 > a.getHours() ? Date.CultureInfo.amDesignator.substring(0, 1) : Date.CultureInfo.pmDesignator.substring(0, 1); case "tt": return 12 > a.getHours() ? Date.CultureInfo.amDesignator : Date.CultureInfo.pmDesignator; case "S": return o(a.getDate()); case "W": return a.getWeek(); case "WW": return a.getISOWeek(); case "Q": return "Q" + a.getQuarter(); case "q": return String(a.getQuarter()); case "z": return a.getTimezone(); case "Z": case "X": return Date.getTimezoneOffset(a.getTimezone()); case "ZZ": return -60 * a.getTimezoneOffset(); case "u": return a.getDay(); case "L": return e.isLeapYear(a.getFullYear()) ? 1 : 0; case "B": return "@" + (a.getUTCSeconds() + 60 * a.getUTCMinutes() + (a.getUTCHours() + 1) * 3600) / 86.4; default: return n } }); return n ? n.replace(/((\\)?(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|S|q|Q|WW?W?W?)(?![^\[]*\]))/g, h).replace(/\[|\]/g, "") : this._toString() } }(), function () { var e = Date, n = e.prototype, i = Number.prototype; n._orient = 1, n._nth = null, n._is = !1, n._same = !1, n._isSecond = !1, i._dateElement = "days", n.next = function () { return this._move = !0, this._orient = 1, this }, e.next = function () { return e.today().next() }, n.last = n.prev = n.previous = function () { return this._move = !0, this._orient = -1, this }, e.last = e.prev = e.previous = function () { return e.today().last() }, n.is = function () { return this._is = !0, this }, n.same = function () { return this._same = !0, this._isSecond = !1, this }, n.today = function () { return this.same().day() }, n.weekday = function () { return this._nth ? d("Weekday").call(this) : this._move ? this.addWeekdays(this._orient) : !!this._is && (this._is = !1, !this.is().sat() && !this.is().sun()) }, n.weekend = function () { return !!this._is && (this._is = !1, this.is().sat() || this.is().sun()) }, n.at = function (n) { return "string" == typeof n ? e.parse(this.toString("d") + " " + n) : this.set(n) }, i.fromNow = i.after = function (e) { var n = {}; return n[this._dateElement] = this, (e ? e.clone() : new Date).add(n) }, i.ago = i.before = function (e) { var n = {}; return n["s" !== this._dateElement[this._dateElement.length - 1] ? this._dateElement + "s" : this._dateElement] = -(this * 1), (e ? e.clone() : new Date).add(n) }; var s, a = "sunday monday tuesday wednesday thursday friday saturday".split(/\s/), o = "january february march april may june july august september october november december".split(/\s/), u = "Millisecond Second Minute Hour Day Week Month Year Quarter Weekday".split(/\s/), h = "Milliseconds Seconds Minutes Hours Date Week Month FullYear Quarter".split(/\s/), c = "final first second third fourth fifth".split(/\s/); n.toObject = function () { for (var e = {}, n = 0; n < u.length; n++)this["get" + h[n]] && (e[u[n].toLowerCase()] = this["get" + h[n]]()); return e }, e.fromObject = function (e) { return e.week = null, Date.today().set(e) }; var d = function (n) { return function () { if (this._is) return this._is = !1, this.getDay() === n; if (this._move && (this._move = null), null !== this._nth) { this._isSecond && this.addSeconds(-1 * this._orient), this._isSecond = !1; var i = this._nth; this._nth = null; var s = this.clone().moveToLastDayOfMonth(); if (this.moveToNthOccurrence(n, i), this > s) throw RangeError(e.getDayName(n) + " does not occur " + i + " times in the month of " + e.getMonthName(s.getMonth()) + " " + s.getFullYear() + "."); return this } return this.moveToDayOfWeek(n, this._orient) } }, l = function (e) { return function () { return this._is ? (this._is = !1, this.getMonth() === e) : this.moveToMonth(e, this._orient) } }, f = function (n) { return function () { return e.today().set({ month: n, day: 1 }) } }, m = function (i, s, a) { for (var o = 0; o < i.length; o++)e[i[o].toUpperCase()] = e[i[o].toUpperCase().substring(0, 3)] = o, e[i[o]] = e[i[o].substring(0, 3)] = s(o), n[i[o]] = n[i[o].substring(0, 3)] = a(o) }; m(a, function (n) { return function () { var i = e.today(), s = n - i.getDay(); return 0 === n && 1 === Date.CultureInfo.firstDayOfWeek && 0 !== i.getDay() && (s += 7), i.addDays(s) } }, d), m(o, f, l); for (var $ = function (e) { return function () { if (this._isSecond) return this._isSecond = !1, this; if (this._same) { this._same = this._is = !1; var n = this.toObject(), i = (arguments[0] || new Date).toObject(), s = "", a = e.toLowerCase(); a = "s" === a[a.length - 1] ? a.substring(0, a.length - 1) : a; for (var o = u.length - 1; o > -1; o--) { if (n[s = u[o].toLowerCase()] !== i[s]) return !1; if (a === s) break } return !0 } return "s" !== e.substring(e.length - 1) && (e += "s"), this._move && (this._move = null), this["add" + e](this._orient) } }, y = function (e) { return function () { return this._dateElement = e, this } }, g = 0; g < u.length; g++)"weekday" !== (s = u[g].toLowerCase()) && (n[s] = n[s + "s"] = $(u[g]), i[s] = i[s + "s"] = y(s + "s")); n._ss = $("Second"); for (var _ = function (e) { return function (n) { return this._same ? this._ss(arguments[0]) : n || 0 === n ? this.moveToNthOccurrence(n, e) : (this._nth = e, 2 === e && null == n) ? (this._isSecond = !0, this.addSeconds(this._orient)) : this } }, T = 0; T < c.length; T++)n[c[T]] = _(0 === T ? -1 : T) }(), function () { "use strict"; Date.Parsing = { Exception: function (e) { this.message = "Parse error at '" + e.substring(0, 10) + " ...'" } }; var e = Date.Parsing, n = { standard: [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334], leap: [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335] }; e.isLeapYear = function (e) { return e % 4 == 0 && e % 100 != 0 || e % 400 == 0 }; var i = { multiReplace: function (e, n) { var i, s; for (i in n) Object.prototype.hasOwnProperty.call(n, i) && ("function" == typeof n[i] || (s = n[i] instanceof RegExp ? n[i] : RegExp(n[i], "g")), e = e.replace(s, i)); return e }, getDayOfYearFromWeek: function (e) { var n, i, s; return e.weekDay = e.weekDay || 0 === e.weekDay ? e.weekDay : 1, s = (i = 0 === (n = new Date(e.year, 0, 4)).getDay() ? 7 : n.getDay()) + 3, e.dayOfYear = 7 * e.week + (0 === e.weekDay ? 7 : e.weekDay) - s, e }, getDayOfYear: function (e, n) { e.dayOfYear || (e = i.getDayOfYearFromWeek(e)); for (var s = 0; s <= n.length; s++) { if (e.dayOfYear < n[s] || s === n.length) { e.day = e.day ? e.day : e.dayOfYear - n[s - 1]; break } e.month = s } return e }, adjustForTimeZone: function (e, n) { var i; return "Z" === e.zone.toUpperCase() || 0 === e.zone_hours && 0 === e.zone_minutes ? i = -n.getTimezoneOffset() : (i = 60 * e.zone_hours + (e.zone_minutes || 0), "+" === e.zone_sign && (i *= -1), i -= n.getTimezoneOffset()), n.setMinutes(n.getMinutes() + i), n }, setDefaults: function (e) { return e.year = e.year || Date.today().getFullYear(), e.hours = e.hours || 0, e.minutes = e.minutes || 0, e.seconds = e.seconds || 0, e.milliseconds = e.milliseconds || 0, !e.month && (e.week || e.dayOfYear) || (e.month = e.month || 0, e.day = e.day || 1), e }, dataNum: function (e, n, i, s) { var a = 1 * e; return n ? s ? e ? 1 * n(e) : e : e ? n(a) : e : i ? e && void 0 !== e ? a : e : e ? a : e }, timeDataProcess: function (e) { var n = {}; for (var s in e.data) e.data.hasOwnProperty(s) && (n[s] = e.ignore[s] ? e.data[s] : i.dataNum(e.data[s], e.mods[s], e.explict[s], e.postProcess[s])); return e.data.secmins && (e.data.secmins = 60 * e.data.secmins.replace(",", "."), n.minutes ? n.seconds || (n.seconds = e.data.secmins) : n.minutes = e.data.secmins, delete e.secmins), n }, buildTimeObjectFromData: function (e) { return i.timeDataProcess({ data: { year: e[1], month: e[5], day: e[7], week: e[8], dayOfYear: e[10], hours: e[15], zone_hours: e[23], zone_minutes: e[24], zone: e[21], zone_sign: e[22], weekDay: e[9], minutes: e[16], seconds: e[19], milliseconds: e[20], secmins: e[18] }, mods: { month: function (e) { return e - 1 }, weekDay: function (e) { return 7 === (e = Math.abs(e)) ? 0 : e }, minutes: function (e) { return e.replace(":", "") }, seconds: function (e) { return Math.floor(1 * e.replace(":", "").replace(",", ".")) }, milliseconds: function (e) { return 1e3 * e.replace(",", ".") } }, postProcess: { minutes: !0, seconds: !0, milliseconds: !0 }, explict: { zone_hours: !0, zone_minutes: !0 }, ignore: { zone: !0, zone_sign: !0, secmins: !0 } }) }, addToHash: function (e, n, i) { for (var s = n.length, a = 0; a < s; a++)e[n[a]] = i[a]; return e }, combineRegex: function (e, n) { return RegExp("((" + e.source + ")\\s(" + n.source + "))") }, getDateNthString: function (e, n, i) { return e ? Date.today().addDays(i).toString("d") : n ? Date.today().last()[i]().toString("d") : void 0 }, buildRegexData: function (e) { for (var n = [], i = e.length, s = 0; s < i; s++)"[object Array]" === Object.prototype.toString.call(e[s]) ? n.push(this.combineRegex(e[s][0], e[s][1])) : n.push(e[s]); return n } }; e.processTimeObject = function (s) { var a, o; return i.setDefaults(s), o = e.isLeapYear(s.year) ? n.leap : n.standard, !s.month && (s.week || s.dayOfYear) ? i.getDayOfYear(s, o) : s.dayOfYear = o[s.month] + s.day, a = new Date(s.year, s.month, s.day, s.hours, s.minutes, s.seconds, s.milliseconds), s.zone && i.adjustForTimeZone(s, a), a }, e.ISO = { regex: /^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-4])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?\s?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/, parse: function (n) { var s, a = n.match(this.regex); return a && a.length && (s = i.buildTimeObjectFromData(a)).year && (s.year || s.month || s.day || s.week || s.dayOfYear) ? e.processTimeObject(s) : null } }, e.Numeric = { isNumeric: function (e) { return !isNaN(parseFloat(e)) && isFinite(e) }, regex: /\b([0-1]?[0-9])([0-3]?[0-9])([0-2]?[0-9]?[0-9][0-9])\b/i, parse: function (n) { var i, s, a = {}, o = Date.CultureInfo.dateElementOrder.split(""); if (!this.isNumeric(n) || "+" === n[0] && "-" === n[0]) return null; if (n.length < 5 && 0 > n.indexOf(".") && 0 > n.indexOf("/")) return a.year = n, e.processTimeObject(a); if (!(i = n.match(this.regex)) || !i.length) return null; for (s = 0; s < o.length; s++)switch (o[s]) { case "d": a.day = i[s + 1]; break; case "m": a.month = i[s + 1] - 1; break; case "y": a.year = i[s + 1] }return e.processTimeObject(a) } }, e.Normalizer = { regexData: function () { var e = Date.CultureInfo.regexPatterns; return i.buildRegexData([e.tomorrow, e.yesterday, [e.past, e.mon], [e.past, e.tue], [e.past, e.wed], [e.past, e.thu], [e.past, e.fri], [e.past, e.sat], [e.past, e.sun]]) }, basicReplaceHash: function () { var e = Date.CultureInfo.regexPatterns; return { January: e.jan.source, February: e.feb, March: e.mar, April: e.apr, May: e.may, June: e.jun, July: e.jul, August: e.aug, September: e.sep, October: e.oct, November: e.nov, December: e.dec, "": /\bat\b/gi, " ": /\s{2,}/, am: e.inTheMorning, "9am": e.thisMorning, pm: e.inTheEvening, "7pm": e.thisEvening } }, keys: function () { return [i.getDateNthString(!0, !1, 1), i.getDateNthString(!0, !1, -1), i.getDateNthString(!1, !0, "monday"), i.getDateNthString(!1, !0, "tuesday"), i.getDateNthString(!1, !0, "wednesday"), i.getDateNthString(!1, !0, "thursday"), i.getDateNthString(!1, !0, "friday"), i.getDateNthString(!1, !0, "saturday"), i.getDateNthString(!1, !0, "sunday")] }, buildRegexFunctions: function () { var e = Date.CultureInfo.regexPatterns, n = Date.i18n.__, i = RegExp("(\\b\\d\\d?(" + n("AM") + "|" + n("PM") + ")? )(" + e.tomorrow.source.slice(1) + ")", "i"), s = RegExp(e.today.source + "(?!\\s*([+-]))\\b"); this.replaceFuncs = [[s, function (e) { return e.length > 1 ? Date.today().toString("d") : e }], [i, function (e, n) { return Date.today().addDays(1).toString("d") + " " + n }], [e.amThisMorning, function (e, n) { return n }], [e.pmThisEvening, function (e, n) { return n }]] }, buildReplaceData: function () { this.buildRegexFunctions(), this.replaceHash = i.addToHash(this.basicReplaceHash(), this.keys(), this.regexData()) }, stringReplaceFuncs: function (e) { for (var n = 0; n < this.replaceFuncs.length; n++)e = e.replace(this.replaceFuncs[n][0], this.replaceFuncs[n][1]); return e }, parse: function (n) { n = this.stringReplaceFuncs(n), n = i.multiReplace(n, this.replaceHash); try { var s = n.split(/([\s\-\.\,\/\x27]+)/); 3 === s.length && e.Numeric.isNumeric(s[0]) && e.Numeric.isNumeric(s[2]) && s[2].length >= 4 && "d" === Date.CultureInfo.dateElementOrder[0] && (n = "1/" + s[0] + "/" + s[2]) } catch (a) { } return n } }, e.Normalizer.buildReplaceData() }(), function () { for (var e = Date.Parsing, n = e.Operators = { rtoken: function (n) { return function (i) { var s = i.match(n); if (s) return [s[0], i.substring(s[0].length)]; throw new e.Exception(i) } }, token: function () { return function (e) { return n.rtoken(RegExp("^\\s*" + e + "\\s*"))(e) } }, stoken: function (e) { return n.rtoken(RegExp("^" + e)) }, until: function (e) { return function (n) { for (var i = [], s = null; n.length;) { try { s = e.call(this, n) } catch (a) { i.push(s[0]), n = s[1]; continue } break } return [i, n] } }, many: function (e) { return function (n) { for (var i = [], s = null; n.length;) { try { s = e.call(this, n) } catch (a) { break } i.push(s[0]), n = s[1] } return [i, n] } }, optional: function (e) { return function (n) { var i = null; try { i = e.call(this, n) } catch (s) { return [null, n] } return [i[0], i[1]] } }, not: function (n) { return function (i) { try { n.call(this, i) } catch (s) { return [null, i] } throw new e.Exception(i) } }, ignore: function (e) { return e ? function (n) { var i = null; return [null, (i = e.call(this, n))[1]] } : null }, product: function () { for (var e = arguments[0], i = Array.prototype.slice.call(arguments, 1), s = [], a = 0; a < e.length; a++)s.push(n.each(e[a], i)); return s }, cache: function (n) { var i = {}, s = 0, a = [], o = Date.Config.CACHE_MAX || 1e5, u = null, h = function () { if (s === o) for (var e = 0; e < 10; e++) { var n = a.shift(); n && (delete i[n], s--) } }; return function (o) { h(); try { u = i[o] = i[o] || n.call(this, o) } catch (c) { u = i[o] = c } if (s++, a.push(o), !(u instanceof e.Exception)) return u; throw u } }, any: function () { var n = arguments; return function (i) { for (var s = null, a = 0; a < n.length; a++)if (null != n[a]) { try { s = n[a].call(this, i) } catch (o) { s = null } if (s) return s } throw new e.Exception(i) } }, each: function () { var n = arguments; return function (i) { for (var s = [], a = null, o = 0; o < n.length; o++)if (null != n[o]) { try { a = n[o].call(this, i) } catch (u) { throw new e.Exception(i) } s.push(a[0]), i = a[1] } return [s, i] } }, all: function () { var e = arguments, n = n; return n.each(n.optional(e)) }, sequence: function (i, s, a) { return (s = s || n.rtoken(/^\s*/), a = a || null, 1 === i.length) ? i[0] : function (n) { for (var o = null, u = null, h = [], c = 0; c < i.length; c++) { try { o = i[c].call(this, n) } catch (d) { break } h.push(o[0]); try { u = s.call(this, o[1]) } catch (l) { u = null; break } n = u[1] } if (!o) throw new e.Exception(n); if (u) throw new e.Exception(u[1]); if (a) try { o = a.call(this, o[1]) } catch (f) { throw new e.Exception(o[1]) } return [h, o ? o[1] : n] } }, between: function (e, i, s) { s = s || e; var a = n.each(n.ignore(e), i, n.ignore(s)); return function (e) { var n = a.call(this, e); return [[n[0][0], r[0][2]], n[1]] } }, list: function (e, i, s) { return i = i || n.rtoken(/^\s*/), s = s || null, e instanceof Array ? n.each(n.product(e.slice(0, -1), n.ignore(i)), e.slice(-1), n.ignore(s)) : n.each(n.many(n.each(e, n.ignore(i))), px, n.ignore(s)) }, set: function (i, s, a) { return s = s || n.rtoken(/^\s*/), a = a || null, function (o) { for (var u = null, h = null, c = null, d = null, l = [[], o], f = !1, m = 0; m < i.length; m++) { c = null, h = null, u = null, f = 1 === i.length; try { u = i[m].call(this, o) } catch ($) { continue } if (d = [[u[0]], u[1]], u[1].length > 0 && !f) try { c = s.call(this, u[1]) } catch (y) { f = !0 } else f = !0; if (f || 0 !== c[1].length || (f = !0), !f) { for (var g = [], _ = 0; _ < i.length; _++)m !== _ && g.push(i[_]); (h = n.set(g, s).call(this, c[1]))[0].length > 0 && (d[0] = d[0].concat(h[0]), d[1] = h[1]) } if (d[1].length < l[1].length && (l = d), 0 === l[1].length) break } if (0 === l[0].length) return l; if (a) { try { c = a.call(this, l[1]) } catch (T) { throw new e.Exception(l[1]) } l[1] = c[1] } return l } }, forward: function (e, n) { return function (i) { return e[n].call(this, i) } }, replace: function (e, n) { return function (i) { return [n, e.call(this, i)[1]] } }, process: function (e, n) { return function (i) { var s = e.call(this, i); return [n.call(this, s[0]), s[1]] } }, min: function (n, i) { return function (s) { var a = i.call(this, s); if (a[0].length < n) throw new e.Exception(s); return a } } }, i = function (e) { return function n() { var i, s, a = null, o = []; return (arguments.length > 1 ? a = Array.prototype.slice.call(arguments) : arguments[0] instanceof Array && (a = arguments[0]), a) ? (i = a.shift()).length > 0 ? (a.unshift(i[s]), o.push(e.apply(null, a)), a.shift(), o) : void 0 : e.apply(null, arguments) } }, s = "optional not ignore cache".split(/\s/), a = 0; a < s.length; a++)n[s[a]] = i(n[s[a]]); for (var o = function (e) { return function () { return arguments[0] instanceof Array ? e.apply(null, arguments[0]) : e.apply(null, arguments) } }, u = "each any all".split(/\s/), h = 0; h < u.length; h++)n[u[h]] = o(n[u[h]]) }(), function () { var e = Date, n = function (e) { for (var i = [], s = 0; s < e.length; s++)e[s] instanceof Array ? i = i.concat(n(e[s])) : e[s] && i.push(e[s]); return i }, i = function () { if (this.meridian && (this.hour || 0 === this.hour)) { if ("a" === this.meridian && this.hour > 11 && Date.Config.strict24hr) throw "Invalid hour and meridian combination"; if ("p" === this.meridian && this.hour < 12 && Date.Config.strict24hr) throw "Invalid hour and meridian combination"; "p" === this.meridian && this.hour < 12 ? this.hour = this.hour + 12 : "a" === this.meridian && 12 === this.hour && (this.hour = 0) } }, s = function () { var e = new Date; !this.hour && !this.minute || this.month || this.year || this.day || (this.day = e.getDate()), this.year || (this.year = e.getFullYear()), this.month || 0 === this.month || (this.month = e.getMonth()), this.day || (this.day = 1), this.hour || (this.hour = 0), this.minute || (this.minute = 0), this.second || (this.second = 0), this.millisecond || (this.millisecond = 0) }, a = { getToday: function () { return this.now || -1 !== "hour minute second".indexOf(this.unit) ? new Date : e.today() }, setDaysFromWeekday: function (n, i) { var s; return i = i || 1, this.unit = "day", s = e.getDayNumberFromName(this.weekday) - n.getDay(), this.days = s ? (s + 7 * i) % 7 : 7 * i, this }, setMonthsFromMonth: function (e, n) { var i; return n = n || 1, this.unit = "month", i = this.month - e.getMonth(), this.months = i ? (i + 12 * n) % 12 : 12 * n, this.month = null, this }, setDMYFromWeekday: function () { var e = Date[this.weekday](); return this.day = e.getDate(), this.month || (this.month = e.getMonth()), this.year = e.getFullYear(), this }, setUnitValue: function (e) { !this.value && this.operator && null !== this.operator && this[this.unit + "s"] && null !== this[this.unit + "s"] ? this[this.unit + "s"] = this[this.unit + "s"] + ("add" === this.operator ? 1 : -1) + (this.value || 0) * e : (null == this[this.unit + "s"] || null != this.operator) && (this.value || (this.value = 1), this[this.unit + "s"] = this.value * e) }, generateDateFromWeeks: function () { var e = Date[void 0 !== this.weekday ? this.weekday : "today"]().addWeeks(this.weeks); return this.now && e.setTimeToNow(), e } }; e.Translator = { hour: function (e) { return function () { this.hour = Number(e) } }, minute: function (e) { return function () { this.minute = Number(e) } }, second: function (e) { return function () { this.second = Number(e) } }, secondAndMillisecond: function (e) { return function () { var n = e.match(/^([0-5][0-9])\.([0-9]{1,3})/); this.second = Number(n[1]), this.millisecond = Number(n[2]) } }, meridian: function (e) { return function () { this.meridian = e.slice(0, 1).toLowerCase() } }, timezone: function (e) { return function () { var n = e.replace(/[^\d\+\-]/g, ""); n.length ? this.timezoneOffset = Number(n) : this.timezone = e.toLowerCase() } }, day: function (e) { var n = e[0]; return function () { if (this.day = Number(n.match(/\d+/)[0]), this.day < 1) throw "invalid day" } }, month: function (e) { return function () { if (this.month = 3 === e.length ? "jan feb mar apr may jun jul aug sep oct nov dec".indexOf(e) / 4 : Number(e) - 1, this.month < 0) throw "invalid month" } }, year: function (e) { return function () { var n = Number(e); this.year = e.length > 2 ? n : n + (n + 2e3 < Date.CultureInfo.twoDigitYearMax ? 2e3 : 1900) } }, rday: function (e) { return function () { switch (e) { case "yesterday": this.days = -1; break; case "tomorrow": this.days = 1; break; case "today": this.days = 0; break; case "now": this.days = 0, this.now = !0 } } }, finishExact: function (n) { var a; n = n instanceof Array ? n : [n]; for (var o = 0; o < n.length; o++)n[o] && n[o].call(this); if (s.call(this), i.call(this), this.day > e.getDaysInMonth(this.year, this.month)) throw RangeError(this.day + " is not a valid value for days."); return a = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond), this.year < 100 && a.setFullYear(this.year), this.timezone ? a.set({ timezone: this.timezone }) : this.timezoneOffset && a.set({ timezoneOffset: this.timezoneOffset }), a }, finish: function (s) { var o, u, h, c; if (0 === (s = s instanceof Array ? n(s) : [s]).length) return null; for (var d = 0; d < s.length; d++)"function" == typeof s[d] && s[d].call(this); if (this.now && !this.unit && !this.operator) return new Date; if (o = a.getToday.call(this), u = !!(this.days && null !== this.days || this.orient || this.operator), h = "past" === this.orient || "subtract" === this.operator ? -1 : 1, this.month && "week" === this.unit && (this.value = this.month + 1, delete this.month, delete this.day), (this.month || 0 === this.month) && -1 !== "year day hour minute second".indexOf(this.unit) && (this.value || (this.value = this.month + 1), this.month = null, u = !0), u || !this.weekday || this.day || this.days || a.setDMYFromWeekday.call(this), u && this.weekday && "month" !== this.unit && "week" !== this.unit && a.setDaysFromWeekday.call(this, o, h), !this.weekday || "week" === this.unit || this.day || this.days || (c = Date[this.weekday](), this.day = c.getDate(), c.getMonth() !== o.getMonth() && (this.month = c.getMonth())), this.month && "day" === this.unit && this.operator && (this.value || (this.value = this.month + 1), this.month = null), null != this.value && null != this.month && null != this.year && (this.day = 1 * this.value), this.month && !this.day && this.value && (o.set({ day: 1 * this.value }), u || (this.day = 1 * this.value)), this.month || !this.value || "month" !== this.unit || this.now || (this.month = this.value, u = !0), u && (this.month || 0 === this.month) && "year" !== this.unit && a.setMonthsFromMonth.call(this, o, h), this.unit || (this.unit = "day"), a.setUnitValue.call(this, h), i.call(this), (this.month || 0 === this.month) && !this.day && (this.day = 1), !this.orient && !this.operator && "week" === this.unit && this.value && !this.day && !this.month) return Date.today().setWeek(this.value); if ("week" === this.unit && this.weeks && !this.day && !this.month) return a.generateDateFromWeeks.call(this); if (u && this.timezone && this.day && this.days && (this.day = this.days), u ? o.add(this) : o.set(this), this.timezone) { this.timezone = this.timezone.toUpperCase(); var l, f = e.getTimezoneOffset(this.timezone); o.hasDaylightSavingTime() && (l = e.getTimezoneAbbreviation(f, o.isDaylightSavingTime())) !== this.timezone && (o.isDaylightSavingTime() ? o.addHours(-1) : o.addHours(1)), o.setTimezoneOffset(f) } return o } } }(), function () { var e = Date; e.Grammar = {}; var n, i = e.Parsing.Operators, s = e.Grammar, a = e.Translator; n = function () { return i.each(i.any.apply(null, arguments), i.not(s.ctoken2("timeContext"))) }, s.datePartDelimiter = i.rtoken(/^([\s\-\.\,\/\x27]+)/), s.timePartDelimiter = i.stoken(":"), s.whiteSpace = i.rtoken(/^\s*/), s.generalDelimiter = i.rtoken(/^(([\s\,]|at|@|on)+)/); var o = {}; s.ctoken = function (e) { var n = o[e]; if (!n) { for (var s = Date.CultureInfo.regexPatterns, a = e.split(/\s+/), u = [], h = 0; h < a.length; h++)u.push(i.replace(i.rtoken(s[a[h]]), a[h])); n = o[e] = i.any.apply(null, u) } return n }, s.ctoken2 = function (e) { return i.rtoken(Date.CultureInfo.regexPatterns[e]) }; var u = function (e, n, a, o) { o ? s[e] = i.cache(i.process(i.each(i.rtoken(n), i.optional(s.ctoken2(o))), a)) : s[e] = i.cache(i.process(i.rtoken(n), a)) }, h = function (e, n) { return i.cache(i.process(s.ctoken2(e), n)) }, c = {}, d = function (e) { return c[e] = c[e] || s.format(e)[0], c[e] }; s.allformats = function (e) { var n = []; if (e instanceof Array) for (var i = 0; i < e.length; i++)n.push(d(e[i])); else n.push(d(e)); return n }, s.formats = function (e) { if (!(e instanceof Array)) return d(e); for (var n = [], s = 0; s < e.length; s++)n.push(d(e[s])); return i.any.apply(null, n) }; var l = { timeFormats: function () { var e, n = ["h", "hh", "H", "HH", "m", "mm", "s", "ss", "ss.s", "z", "zz"], o = [/^(0[0-9]|1[0-2]|[1-9])/, /^(0[0-9]|1[0-2])/, /^([0-1][0-9]|2[0-3]|[0-9])/, /^([0-1][0-9]|2[0-3])/, /^([0-5][0-9]|[0-9])/, /^[0-5][0-9]/, /^([0-5][0-9]|[0-9])/, /^[0-5][0-9]/, /^[0-5][0-9]\.[0-9]{1,3}/, /^((\+|\-)\s*\d\d\d\d)|((\+|\-)\d\d\:?\d\d)/, /^((\+|\-)\s*\d\d\d\d)|((\+|\-)\d\d\:?\d\d)/], c = [a.hour, a.hour, a.hour, a.minute, a.minute, a.second, a.second, a.secondAndMillisecond, a.timezone, a.timezone, a.timezone]; for (e = 0; e < n.length; e++)u(n[e], o[e], c[e]); s.hms = i.cache(i.sequence([s.H, s.m, s.s], s.timePartDelimiter)), s.t = h("shortMeridian", a.meridian), s.tt = h("longMeridian", a.meridian), s.zzz = h("timezone", a.timezone), s.timeSuffix = i.each(i.ignore(s.whiteSpace), i.set([s.tt, s.zzz])), s.time = i.each(i.optional(i.ignore(i.stoken("T"))), s.hms, s.timeSuffix) }, dateFormats: function () { var e, o = function () { return i.set(arguments, s.datePartDelimiter) }, h = ["d", "dd", "M", "MM", "y", "yy", "yyy", "yyyy"], c = [/^([0-2]\d|3[0-1]|\d)/, /^([0-2]\d|3[0-1])/, /^(1[0-2]|0\d|\d)/, /^(1[0-2]|0\d)/, /^(\d+)/, /^(\d\d)/, /^(\d\d?\d?\d?)/, /^(\d\d\d\d)/], d = [a.day, a.day, a.month, a.month, a.year, a.year, a.year, a.year], l = ["ordinalSuffix", "ordinalSuffix"]; for (e = 0; e < h.length; e++)u(h[e], c[e], d[e], l[e]); s.MMM = s.MMMM = i.cache(i.process(s.ctoken("jan feb mar apr may jun jul aug sep oct nov dec"), a.month)), s.ddd = s.dddd = i.cache(i.process(s.ctoken("sun mon tue wed thu fri sat"), function (e) { return function () { this.weekday = e } })), s.day = n(s.d, s.dd), s.month = n(s.M, s.MMM), s.year = n(s.yyyy, s.yy), s.mdy = o(s.ddd, s.month, s.day, s.year), s.ymd = o(s.ddd, s.year, s.month, s.day), s.dmy = o(s.ddd, s.day, s.month, s.year), s.date = function (e) { return (s[Date.CultureInfo.dateElementOrder] || s.mdy).call(this, e) } }, relative: function () { s.orientation = i.process(s.ctoken("past future"), function (e) { return function () { this.orient = e } }), s.operator = i.process(s.ctoken("add subtract"), function (e) { return function () { this.operator = e } }), s.rday = i.process(s.ctoken("yesterday tomorrow today now"), a.rday), s.unit = i.process(s.ctoken("second minute hour day week month year"), function (e) { return function () { this.unit = e } }) } }; s.buildGrammarFormats = function () { o = {}, l.timeFormats(), l.dateFormats(), l.relative(), s.value = i.process(i.rtoken(/^([-+]?\d+)?(st|nd|rd|th)?/), function (e) { return function () { this.value = e.replace(/\D/g, "") } }), s.expression = i.set([s.rday, s.operator, s.value, s.unit, s.orientation, s.ddd, s.MMM]), s.format = i.process(i.many(i.any(i.process(i.rtoken(/^(dd?d?d?(?!e)|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?)/), function (n) { if (s[n]) return s[n]; throw e.Parsing.Exception(n) }), i.process(i.rtoken(/^[^dMyhHmstz]+/), function (e) { return i.ignore(i.stoken(e)) }))), function (e) { return i.process(i.each.apply(null, e), a.finishExact) }), s._start = i.process(i.set([s.date, s.time, s.expression], s.generalDelimiter, s.whiteSpace), a.finish) }, s.buildGrammarFormats(), s._formats = s.formats(['"yyyy-MM-ddTHH:mm:ssZ"', "yyyy-MM-ddTHH:mm:ss.sz", "yyyy-MM-ddTHH:mm:ssZ", "yyyy-MM-ddTHH:mm:ssz", "yyyy-MM-ddTHH:mm:ss", "yyyy-MM-ddTHH:mmZ", "yyyy-MM-ddTHH:mmz", "yyyy-MM-ddTHH:mm", "ddd, MMM dd, yyyy H:mm:ss tt", "ddd MMM d yyyy HH:mm:ss zzz", "MMddyyyy", "ddMMyyyy", "Mddyyyy", "ddMyyyy", "Mdyyyy", "dMyyyy", "yyyy", "Mdyy", "dMyy", "d"]), s.start = function (e) { try { var n = s._formats.call({}, e); if (0 === n[1].length) return n } catch (i) { } return s._start.call({}, e) } }(), function () { var e = Date, n = { removeOrds: function (e) { return e = (ords = e.match(/\b(\d+)(?:st|nd|rd|th)\b/)) && 2 === ords.length ? e.replace(ords[0], ords[1]) : e }, grammarParser: function (n) { var i = null; try { i = e.Grammar.start.call({}, n.replace(/^\s*(\S*(\s+\S+)*)\s*$/, "$1")) } catch (s) { return null } return 0 === i[1].length ? i[0] : null }, nativeFallback: function (e) { var n; try { return (n = Date._parse(e)) || 0 === n ? new Date(n) : null } catch (i) { return null } } }; e._parse || (e._parse = e.parse), e.parse = function i(s) { var a; return s ? s instanceof Date ? s.clone() : (s.length >= 4 && "0" !== s.charAt(0) && "+" !== s.charAt(0) && "-" !== s.charAt(0) && (a = e.Parsing.ISO.parse(s) || e.Parsing.Numeric.parse(s)), a instanceof Date && !isNaN(a.getTime())) ? a : (s = e.Parsing.Normalizer.parse(n.removeOrds(s)), null !== (a = n.grammarParser(s))) ? a : n.nativeFallback(s) : null }, Date.getParseFunction = function (e) { var n = Date.Grammar.allformats(e); return function (e) { for (var i = null, s = 0; s < n.length; s++) { try { i = n[s].call({}, e) } catch (a) { continue } if (0 === i[1].length) return i[0] } return null } }, e.parseExact = function (n, i) { return e.getParseFunction(i)(n) } }(), function () { var e = Date, n = e.prototype, i = function (e, n) { return n || (n = 2), ("000" + e).slice(-1 * n) }, s = { d: "dd", "%d": "dd", D: "ddd", "%a": "ddd", j: "dddd", l: "dddd", "%A": "dddd", S: "S", F: "MMMM", "%B": "MMMM", m: "MM", "%m": "MM", M: "MMM", "%b": "MMM", "%h": "MMM", n: "M", Y: "yyyy", "%Y": "yyyy", y: "yy", "%y": "yy", g: "h", "%I": "h", G: "H", h: "hh", H: "HH", "%H": "HH", i: "mm", "%M": "mm", s: "ss", "%S": "ss", "%r": "hh:mm tt", "%R": "H:mm", "%T": "H:mm:ss", "%X": "t", "%x": "d", "%e": "d", "%D": "MM/dd/yy", "%n": "\\n", "%t": "\\t", e: "z", T: "z", "%z": "z", "%Z": "z", Z: "ZZ", N: "u", w: "u", "%w": "u", W: "W", "%V": "W" }, a = { substitutes: function (e) { return s[e] }, interpreted: function (n, s) { var a; switch (n) { case "%u": return s.getDay() + 1; case "z": return s.getOrdinalNumber(); case "%j": return i(s.getOrdinalNumber(), 3); case "%U": var o = s.clone().set({ month: 0, day: 1 }).addDays(-1).moveToDayOfWeek(0), u = s.clone().addDays(1).moveToDayOfWeek(0, -1); return u < o ? "00" : i((u.getOrdinalNumber() - o.getOrdinalNumber()) / 7 + 1); case "%W": return i(s.getWeek()); case "t": return e.getDaysInMonth(s.getFullYear(), s.getMonth()); case "o": case "%G": return s.setWeek(s.getISOWeek()).toString("yyyy"); case "%g": return s._format("%G").slice(-2); case "a": case "%p": return t("tt").toLowerCase(); case "A": return t("tt").toUpperCase(); case "u": return i(s.getMilliseconds(), 3); case "I": return s.isDaylightSavingTime() ? 1 : 0; case "O": return s.getUTCOffset(); case "P": return (a = s.getUTCOffset()).substring(0, a.length - 2) + ":" + a.substring(a.length - 2); case "B": var h = new Date; return Math.floor((3600 * h.getHours() + 60 * h.getMinutes() + h.getSeconds() + (h.getTimezoneOffset() + 60) * 60) / 86.4); case "c": return s.toISOString().replace(/\"/g, ""); case "U": return e.strtotime("now"); case "%c": return t("d") + " " + t("t"); case "%C": return Math.floor(s.getFullYear() / 100 + 1) } }, shouldOverrideDefaults: function (e) { return "%e" === e }, parse: function (e, n) { var i, s = n || new Date; return (i = a.substitutes(e)) ? i : (i = a.interpreted(e, s)) ? i : e } }; e.normalizeFormat = function (e, n) { return e.replace(/(%|\\)?.|%%/g, function (e) { return a.parse(e, n) }) }, e.strftime = function (e, n) { return Date.parse(n)._format(e) }, e.strtotime = function (n) { var i = e.parse(n); return Math.round(e.UTC(i.getUTCFullYear(), i.getUTCMonth(), i.getUTCDate(), i.getUTCHours(), i.getUTCMinutes(), i.getUTCSeconds(), i.getUTCMilliseconds()) / 1e3) }, n._format = function (n) { var i, s = (i = this, function (n) { var s, o = !1; return "\\" === n.charAt(0) || "%%" === n.substring(0, 2) ? n.replace("\\", "").replace("%%", "%") : (o = a.shouldOverrideDefaults(n), s = e.normalizeFormat(n, i)) ? i.toString(s, o) : void 0 }); return n ? n.replace(/(%|\\)?.|%%/g, s) : this._toString() }, n.format || (n.format = n._format) }(), function () { "use strict"; var e = function (e) { return function () { return this[e] } }, n = function (e) { return function (n) { return this[e] = n, this } }, i = function (e, n, s, a, o) { if (1 === arguments.length && "number" == typeof e) { var u = e < 0 ? -1 : 1, h = Math.abs(e); this.setDays(Math.floor(h / 864e5) * u), h %= 864e5, this.setHours(Math.floor(h / 36e5) * u), h %= 36e5, this.setMinutes(Math.floor(h / 6e4) * u), h %= 6e4, this.setSeconds(Math.floor(h / 1e3) * u), h %= 1e3, this.setMilliseconds(h * u) } else this.set(e, n, s, a, o); return this.getTotalMilliseconds = function () { return 864e5 * this.getDays() + 36e5 * this.getHours() + 6e4 * this.getMinutes() + 1e3 * this.getSeconds() }, this.compareTo = function (e) { var n, i = new Date(1970, 1, 1, this.getHours(), this.getMinutes(), this.getSeconds()); return n = null === e ? new Date(1970, 1, 1, 0, 0, 0) : new Date(1970, 1, 1, e.getHours(), e.getMinutes(), e.getSeconds()), i < n ? -1 : i > n ? 1 : 0 }, this.equals = function (e) { return 0 === this.compareTo(e) }, this.add = function (e) { return null === e ? this : this.addSeconds(e.getTotalMilliseconds() / 1e3) }, this.subtract = function (e) { return null === e ? this : this.addSeconds(-e.getTotalMilliseconds() / 1e3) }, this.addDays = function (e) { return new i(this.getTotalMilliseconds() + 864e5 * e) }, this.addHours = function (e) { return new i(this.getTotalMilliseconds() + 36e5 * e) }, this.addMinutes = function (e) { return new i(this.getTotalMilliseconds() + 6e4 * e) }, this.addSeconds = function (e) { return new i(this.getTotalMilliseconds() + 1e3 * e) }, this.addMilliseconds = function (e) { return new i(this.getTotalMilliseconds() + e) }, this.get12HourHour = function () { return this.getHours() > 12 ? this.getHours() - 12 : 0 === this.getHours() ? 12 : this.getHours() }, this.getDesignator = function () { return 12 > this.getHours() ? Date.CultureInfo.amDesignator : Date.CultureInfo.pmDesignator }, this.toString = function (e) { this._toString = function () { return null !== this.getDays() && this.getDays() > 0 ? this.getDays() + "." + this.getHours() + ":" + this.p(this.getMinutes()) + ":" + this.p(this.getSeconds()) : this.getHours() + ":" + this.p(this.getMinutes()) + ":" + this.p(this.getSeconds()) }, this.p = function (e) { return e.toString().length < 2 ? "0" + e : e }; var n = this; return e ? e.replace(/dd?|HH?|hh?|mm?|ss?|tt?/g, function (e) { switch (e) { case "d": return n.getDays(); case "dd": return n.p(n.getDays()); case "H": return n.getHours(); case "HH": return n.p(n.getHours()); case "h": return n.get12HourHour(); case "hh": return n.p(n.get12HourHour()); case "m": return n.getMinutes(); case "mm": return n.p(n.getMinutes()); case "s": return n.getSeconds(); case "ss": return n.p(n.getSeconds()); case "t": return (12 > n.getHours() ? Date.CultureInfo.amDesignator : Date.CultureInfo.pmDesignator).substring(0, 1); case "tt": return 12 > n.getHours() ? Date.CultureInfo.amDesignator : Date.CultureInfo.pmDesignator } }) : this._toString() }, this }; (function (i, s) { for (var a = 0; a < s.length; a++) { var o = s[a], u = o.slice(0, 1).toUpperCase() + o.slice(1); i.prototype[o] = 0, i.prototype["get" + u] = e(o), i.prototype["set" + u] = n(o) } })(i, ["days", "hours", "minutes", "seconds", "milliseconds"]), i.prototype.set = function (e, n, i, s, a) { this.setDays(e || this.getDays()), this.setHours(n || this.getHours()), this.setMinutes(i || this.getMinutes()), this.setSeconds(s || this.getSeconds()), this.setMilliseconds(a || this.getMilliseconds()) }, Date.prototype.getTimeOfDay = function () { return new i(0, this.getHours(), this.getMinutes(), this.getSeconds(), this.getMilliseconds()) }, Date.TimeSpan = i, "undefined" != typeof window && (window.TimeSpan = i) }(), function () { "use strict"; var e = function (e) { return function () { return this[e] } }, n = function (e) { return function (n) { return this[e] = n, this } }, i = function (e, n, i, s) { function a() { n.addMonths(-e), s.months++, 12 === s.months && (s.years++, s.months = 0) } if (1 === e) for (; n > i;)a(); else for (; n < i;)a(); s.months--, s.months *= e, s.years *= e }, s = function (e, n, i) { var s = !1 == (n.isDaylightSavingTime() === i.isDaylightSavingTime()); s && 1 === e ? n.addHours(-1) : s && n.addHours(1) }, a = function (e, n, a, o, u, h, c) { if (7 === arguments.length) this.set(e, n, a, o, u, h, c); else if (2 === arguments.length && arguments[0] instanceof Date && arguments[1] instanceof Date) { var d = arguments[0].clone(), l = arguments[1].clone(), f = d > l ? 1 : -1; this.dates = { start: arguments[0].clone(), end: arguments[1].clone() }, i(f, d, l, this), s(f, d, l); var m = l - d; if (0 !== m) { var $ = new TimeSpan(m); this.set(this.years, this.months, $.getDays(), $.getHours(), $.getMinutes(), $.getSeconds(), $.getMilliseconds()) } } return this }; (function (i, s) { for (var a = 0; a < s.length; a++) { var o = s[a], u = o.slice(0, 1).toUpperCase() + o.slice(1); i.prototype[o] = 0, i.prototype["get" + u] = e(o), i.prototype["set" + u] = n(o) } })(a, ["years", "months", "days", "hours", "minutes", "seconds", "milliseconds"]), a.prototype.set = function (e, n, i, s, a, o, u) { this.setYears(e || this.getYears()), this.setMonths(n || this.getMonths()), this.setDays(i || this.getDays()), this.setHours(s || this.getHours()), this.setMinutes(a || this.getMinutes()), this.setSeconds(o || this.getSeconds()), this.setMilliseconds(u || this.getMilliseconds()) }, Date.TimePeriod = a, "undefined" != typeof window && (window.TimePeriod = a) }();